{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description" : "Deploys a REST (hopefully) API and all supporting backend and database resources.",
  "Parameters": {
    "ProjectName": {
      "Description": "The name of the project.",
      "Type": "String"
    },
    "Environment": {
      "Description": "The environment (Dev, Staging, Prod) to deploy to.",
      "Type": "String",
      "AllowedValues" : ["dev", "staging", "prod"],
      "Default": "dev"
    },
    "LambdaS3Location": {
      "Description": "The S3 directory (i.e s3://..) where the lambda YAML files are found.",
      "Type": "String"
    }
  },
  "Resources": {
    "RestAPI": {
      "Type" : "AWS::ApiGateway::RestApi",
      "Properties" : {
        "Description" : {"Fn::Join": ["", [
          "The ",
          { "Ref": "ProjectName" },
          " REST API."
        ]]},
        "Name" : { "Fn::Join": ["-",  [
          { "Ref": "ProjectName" },
          "api",
          { "Ref": "Environment" }
        ]]}
      }
    },
    "ProjectsResource": {
      "Type" : "AWS::ApiGateway::Resource",
      "Properties" : {
        "ParentId" : { "Fn::GetAtt": ["RestAPI", "RootResourceId"] },
        "PathPart" : "projects",
        "RestApiId" : { "Ref": "RestAPI" }
      }
    },
    "ProjectsGet": {
      "Type" : "AWS::ApiGateway::Method",
      "Properties" : {
        "RestApiId" : { "Ref": "RestAPI" },
        "AuthorizationType" : "NONE",
        "HttpMethod": "GET",
        "ResourceId" : { "Ref": "ProjectsResource" },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false
            },
            "ResponseModels": {
              "application/json": { "Ref": "ProjectsArrayModel"}
            }
          }
        ],
        "Integration": {
          "Type" : "AWS",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates" : { "application/json": "" },
              "StatusCode" : "200"
            }
          ],
          "Uri": {"Fn::Join": ["", [
            "arn:aws:apigateway:",
            { "Ref": "AWS::Region" },
            ":lambda:path/2015-03-31/functions/",
            { "Fn::GetAtt" : [ "LambdaProjects", "Arn" ] },
            "/invocations"
          ]]}
        }
      }
    },
    "ProjectsArrayModel": {
      "Type" : "AWS::ApiGateway::Model",
      "Properties" : {
        "ContentType" : "application/json",
        "Description" : "An array of Project resources.",
        "Name" : "ProjectsArray",
        "RestApiId" : {"Ref": "RestAPI"},
        "Schema" : {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "PostsDataArray",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {"type": "string"},
              "name": {"type": "string"},
              "description": {"type": "string"}
            },
            "required": ["id", "name", "description"]
          }
        }
      }
    },
    "LambdaProjects": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.lambda_handler",
        "Role": { "Fn::GetAtt" : ["LambdaRole", "Arn"] },
        "FunctionName": {"Fn::Join": ["-", [
          {"Ref": "ProjectName"},
          "api",
          "projects",
          { "Ref": "Environment" }
        ]]},
        "Code": {
          "Fn::Transform": [
            {
              "Name": "AWS::Include",
              "Parameters": {
                "Location": {"Fn::Join": ["", [
                  { "Ref": "LambdaS3Location" },
                  "projects.yaml"
                ]]}
              }
            }
          ]
        },
        "Runtime": "python3.6",
        "Timeout": "25",
        "TracingConfig": {
          "Mode": "Active"
        }
      }
    },
    "LambdaProjectsInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [ "LambdaProjects", "Arn" ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "LambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "s3.amazonaws.com",
                  "apigateway.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Type": "AWS::IAM::Role"
    },
    "LambdaRolePolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:*",
                "dynamodb:*",
                "s3:*",
                "logs:*",
                "xray:*",
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": { "Fn::Join": ["-", [
          { "Ref": "ProjectName"},
          "APILambdaRole"
        ]]},
        "Roles": [
          {
            "Ref": "LambdaRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    }
  }
}
