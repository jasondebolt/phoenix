{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Generates all database resources required for a microservice.",
  "Parameters": {
    "ProjectName": {
      "Description": "The name of the project.",
      "Type": "String"
    },
    "Environment": {
      "Description": "The environment (dev, testing, prod, etc.) to deploy to.",
      "Type": "String"
    },
    "LambdaBucketName": {
      "Description": "The S3 bucket name in which to store Lambda function.",
      "Type": "String"
    },
    "Version": {
      "Description": "The function version",
      "Type": "String"
    },
    "MicroserviceStackName": {
      "Description": "The name of the microservice stack (used for value imports)",
      "Type": "String"
    }
  },
  "Resources": {
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [{
            "Action": [
              "sts:AssumeRole",
            ],
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "lambda.amazonaws.com",
                "s3.amazonaws.com",
                "apigateway.amazonaws.com",
                "ssm.amazonaws.com"
              ]
            }
          }],
          "Version": "2012-10-17"
        }
      }
    },
    "LambdaRolePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [{
            "Action": [
              "lambda:*",
              "dynamodb:*",
              "s3:*",
              "kms:*",
              "ssm:*",
              "logs:*",
              "xray:*",
              "sts:AssumeRole",
              "iam:GetRole",
              "iam:PassRole"
            ],
            "Effect": "Allow",
            "Resource": "*"
          }],
          "Version": "2012-10-17"
        },
        "PolicyName": {
          "Fn::Join": ["-", [{
              "Ref": "ProjectName"
            },
            {
              "Ref": "Environment"
            },
            {
              "Ref": "AWS::StackName"
            }
          ]]
        },
        "Roles": [{
          "Ref": "LambdaRole"
        }]
      }
    },
    "LambdaPasswordGenerator": {
      "DependsOn": ["LambdaRole", "LambdaRolePolicy"],
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "lambda_function.lambda_handler",
        "Role": {
          "Fn::GetAtt": ["LambdaRole", "Arn"]
        },
        "Code": {
          "S3Bucket": {
            "Ref": "LambdaBucketName"
          },
          "S3Key": {
            "Fn::Join": ["/", [{
                "Ref": "Version"
              },
              "password_generator",
              "lambda_function.zip"
            ]]
          }
        },
        "Runtime": "python3.6",
        "Timeout": "25"
      }
    },
    "CustomResourcePasswordGenerator": {
      "DependsOn": ["LambdaRole", "LambdaRolePolicy"],
      "Type": "Custom::PasswordGenerator",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": ["LambdaPasswordGenerator", "Arn"]
        },
        "Type": "encrypt",
        "PasswordLength": 20,
        "KMSKeyId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [{
                "Ref": "MicroserviceStackName"
              },
              "KMSEncryptionKeyId"
            ]]
          }
        },
        "ParameterName": {"Fn::Join": ["-", [
          {"Ref": "ProjectName"},
          {"Ref": "Environment"},
          "aurora", "admin", "password"
        ]]},
        "ParameterDescription": {"Fn::Join": ["", [
          "This parameter was created by stack ",
          {"Ref": "AWS::StackName"},
          " to store passwords for the ",
          {"Ref": "ProjectName"},
          {"Ref": "Environment"},
          " Aurora DB TEST"
        ]]}
      }
    },
    "CustomResourcePasswordRetriever": {
      "DependsOn": ["LambdaRole", "LambdaRolePolicy", "CustomResourcePasswordGenerator"],
      "Type": "Custom::PasswordRetriever",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": ["LambdaPasswordGenerator", "Arn"]
        },
        "Type": "decrypt",
        "PasswordLength": 20,
        "KMSKeyId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [{
                "Ref": "MicroserviceStackName"
              },
              "KMSEncryptionKeyId"
            ]]
          }
        },
        "ParameterName": {"Fn::Join": ["-", [
          {"Ref": "ProjectName"},
          {"Ref": "Environment"},
          "aurora", "admin", "password"
        ]]},
        "ParameterDescription": {"Fn::Join": ["", [
          "This parameter was created by stack ",
          {"Ref": "AWS::StackName"},
          " to store passwords for the ",
          {"Ref": "ProjectName"},
          {"Ref": "Environment"},
          " Aurora DB"
        ]]}
      }
    }
  },
  "Outputs": {
    "Password": {
      "Export": {
        "Name": {
          "Fn::Join": ["", [{
            "Ref": "AWS::StackName"
          }, "-", "Password"]]
        }
      },
      "Value": {
        "Fn::GetAtt": ["CustomResourcePasswordRetriever", "Password"]
      }
    }
  }
}
