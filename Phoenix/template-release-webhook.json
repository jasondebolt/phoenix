{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description" : "Deploys an API Gateway endpoint that GitHub push events can invoke to setup/teardown release pipeline",
  "Transform" : ["ProjectLambdaMacro"],
  "Parameters": {
    "VPCPrefix": {
      "Description": "The 'export' name prefix of the cloudformation stack for the VPC used by this service.",
      "Type": "String"
    },
    "Version": {
      "Description": "The identifier/version associated with this API.",
      "Type": "String"
    },
    "StageName": {
      "Description": "The API Gateway stage name",
      "Type": "String",
      "Default": "v0"
    }
  },
  "Resources": {
    "Latest": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": ["ReleasePost"],
      "Properties": {
        "RestApiId": {"Ref": "RestAPI"},
        "Description": "Description here",
        "StageName": {"Ref": "StageName"}
      }
    },
    "RestAPI": {
      "Type" : "AWS::ApiGateway::RestApi",
      "Properties" : {
        "Description" : {"Fn::Join": ["", [
          "The ",
          {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
          " GitHub Release ",
          " REST API (Release Candidate ",
          {"Ref": "Version"},
          ")"
        ]]},
        "Name" : { "Fn::Join": ["-",  [
          {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
          "api",
          "release-webhook"
        ]]}
      }
    },
    "ReleaseResource": {
      "Type" : "AWS::ApiGateway::Resource",
      "Properties" : {
        "ParentId" : { "Fn::GetAtt": ["RestAPI", "RootResourceId"] },
        "PathPart" : "Release",
        "RestApiId" : { "Ref": "RestAPI" }
      }
    },
    "ReleasePost": {
      "Type" : "AWS::ApiGateway::Method",
      "DependsOn": ["LambdaRelease"],
      "Properties" : {
        "RestApiId" : { "Ref": "RestAPI" },
        "AuthorizationType" : "NONE",
        "RequestParameters": {
          "method.request.header.X-Hub-Signature": true
        },
        "HttpMethod": "POST",
        "ResourceId" : { "Ref": "ReleaseResource" },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false
            },
            "StatusCode": "401",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false
            }
          }
        ],
        "Integration": {
          "Type" : "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates" : { "application/json": "" },
              "StatusCode" : "200"
            },
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates" : { "application/json": "" },
              "StatusCode" : "401"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "Uri": {"Fn::Join": ["", [
            "arn:aws:apigateway:",
            { "Ref": "AWS::Region" },
            ":lambda:path/2015-03-31/functions/",
            { "Fn::GetAtt": [
              "LambdaRelease",
              "Arn"
            ]},
            "/invocations"
          ]]}
        }
      }
    },
    "CustomResourceGitHubReleaseSecret": {
      "Type": "Custom::GitHubReleaseSecret",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "ssm-globals-macro",
              "LambdaSSMSecretArn"
            ]]
          }
        },
        "LambdaVersion": {"Ref": "Version"},
        "SSMSecret": {
          "Name": {"Fn::Join": ["/", [
            "/microservice",
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "global",
            "github",
            "release-secret"
          ]]},
          "Description": "GitHub release secret used for the release webhook.",
          "SecretLength": 64,
          "Type": "SecureString",
          "KeyId": "alias/aws/ssm",
          "Overwrite": true
        }
      }
    },
    "LambdaReleaseSG": {
      "Properties": {
        "GroupDescription": "Release Lambda Security Group",
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Sub": [
              "${StackName}-lambda-sg", {
                "StackName": {"Ref": "AWS::StackName"}
              }
            ]}
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "dev-vpc-VPC"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "DeleteLambdaReleaseInterfaceOnStackDelete": {
      "Type": "Custom::DeleteLambdaReleaseInterfaceOnStackDelete",
      "Properties": {
        "ServiceToken": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "ssm-globals-macro",
              "LambdaDeleteNetworkInterfaceArn"
            ]]
          }
        },
        "SecurityGroupId": {"Ref": "LambdaReleaseSG"}
      }
    },
    "LambdaRelease": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": ["LambdaReleaseSG", "CustomResourceGitHubReleaseSecret"],
      "Properties": {
        "Handler": "lambda_function.lambda_handler",
        "Role": {"PhoenixSSM": "/microservice/{ProjectName}/global/iam-role"},
        "Environment": {
          "Variables": {
            "PROJECT_NAME": {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "PROJECT_DESCRIPTION": {"PhoenixSSM": "/microservice/{ProjectName}/global/project-description"},
            "CODE_PIPELINE_BUCKET_NAME": {"PhoenixSSM": "/microservice/{ProjectName}/global/code-build-bucket-name"},
            "CODE_BUILD_DOCKER_IMAGE": {"PhoenixSSM": "/microservice/{ProjectName}/global/code-build-docker-image"},
            "LAMBDA_BUCKET_NAME": {"PhoenixSSM": "/microservice/{ProjectName}/global/lambda-bucket-name"},
            "IAM_ROLE": {"PhoenixSSM": "/microservice/{ProjectName}/global/iam-role"},
            "GITHUB_ORGANIZATION": {"PhoenixSSM": "/microservice/{ProjectName}/global/github/organization"},
            "CODE_BUILD_SERVICE_ROLE_ARN": {"Fn::Join": ["", [
              "{{resolve:ssm:",
              "/microservice/",
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "/global/code-build-service-role-arn",
              ":1}}"
            ]]},
            "CODE_PIPELINE_SERVICE_ROLE_ARN": {"Fn::Join": ["", [
              "{{resolve:ssm:",
              "/microservice/",
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "/global/code-pipeline-service-role-arn",
              ":1}}"
            ]]}
          }
        },
        "Code": {
          "S3Bucket" : {"PhoenixSSM": "/microservice/{ProjectName}/global/lambda-bucket-name"},
          "S3Key" : {"Fn::Join": ["/", [
            {"Ref": "Version"},
            "release_webhook",
            "lambda_function.zip"
          ]]}
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "LambdaReleaseSG"}
          ],
          "SubnetIds" : [
            {"Fn::ImportValue": "dev-vpc-PrivateSubnetAZ1"},
            {"Fn::ImportValue": "dev-vpc-PrivateSubnetAZ2"}
          ]
        },
        "Timeout": "300"
      }
    },
    "LambdaReleaseInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [ "LambdaRelease", "Arn" ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "LambdaCreateReleaseWebhook": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "lambda_function.lambda_handler",
        "Role": {"PhoenixSSM": "/microservice/{ProjectName}/global/iam-role"},
        "Environment": {
          "Variables": {
            "PROJECT_NAME": {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "GITHUB_ORGANIZATION": {"PhoenixSSM": "/microservice/{ProjectName}/global/github/organization"}
          }
        },
        "Code": {
          "S3Bucket" : {"PhoenixSSM": "/microservice/{ProjectName}/global/lambda-bucket-name"},
          "S3Key" : {"Fn::Join": ["/", [
            {"Ref": "Version"},
            "create_release_webhook",
            "lambda_function.zip"
          ]]}
        },
        "Runtime": "python3.6",
        "Timeout": "25"
      }
    },
    "CustomResourceCreateReleaseWebhook": {
      "Type": "Custom::CreateReleaseWebhook",
      "DependsOn": ["RestAPI", "LambdaCreateReleaseWebhook", "CustomResourceGitHubReleaseSecret"],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": ["LambdaCreateReleaseWebhook", "Arn"]
        },
        "LambdaVersion": {"Ref": "Version"},
        "GitHubWebhookParams": {
          "active": true,
          "events": [
            "push"
          ],
          "config": {
            "url": {
              "Fn::Join": ["", [
                "https://",
                {"Ref": "RestAPI"},
                ".",
                "execute-api",
                ".",
                {"Ref": "AWS::Region"},
                ".",
                "amazonaws.com",
                "/",
                {"Ref": "StageName"},
                "/",
                "Release"
              ]]
            }
          }
        },
        "RepoName": {
          "PhoenixSSM": "/microservice/{ProjectName}/global/git-repo-name"
        }
      }
    }
  },
  "Outputs": {
    "ReleaseURL": {
      "Export": {
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "release-webhook",
            "ReleaseURL"
          ]]
        }
      },
      "Value": {
        "Fn::Join": ["", [
          "https://",
          {"Ref": "RestAPI"},
          ".",
          "execute-api",
          ".",
          {"Ref": "AWS::Region"},
          ".",
          "amazonaws.com",
          "/",
          {"Ref": "StageName"},
          "/",
          "Release"
        ]]
      }
    }
  }
}
