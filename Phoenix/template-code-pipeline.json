{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Generates all resources required for a microservice.",
  "Parameters": {
    "ProjectName": {
      "Description": "The name of your project.",
      "MinLength": "1",
      "MaxLength": "20",
      "AllowedPattern": "^[a-z]+[\\-a-z0-9]*[a-z0-9]+",
      "ConstraintDescription": "User all lowercase, dashes, or numbers (demo-project) between 1 and 20 characters in length. Must not start with a number, and must not start or end with a dash.",
      "Type": "String"
    },
    "Environment": {
      "Description": "The environment to deploy the pipeline to.",
      "Type": "String"
    },
    "BranchName": {
      "Description": "The BranchName of the pipeline.",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-z]+[\\-a-z]*[a-z]+",
      "ConstraintDescription": "Use all lowercase, optionally seperated by dashes, up to 16 characters.",
      "Type": "String"
    },
    "ReviewNotificationEmail": {
      "Description": "The email to send code review notifications to.",
      "Type": "String"
    }
  },
  "Resources": {
    "ReviewSNSTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "Review",
        "Subscription": [{
          "Endpoint": {
            "Ref": "ReviewNotificationEmail"
          },
          "Protocol": "email"
        }],
        "TopicName": {
          "Fn::Join": ["-", [
            "code-review-for",
            {"Ref": "ProjectName"},
            {"Ref": "Environment"},
            {"Ref": "BranchName"}
          ]]
        }
      }
    },
    "CodePipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn" : {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              {"Ref": "ProjectName"},
              "microservice",
              "CodePipelineServiceRoleArn"
            ]]
          }
        },
        "Name": {
          "Fn::Join": ["-", [
            {"Ref": "ProjectName"},
            {"Ref": "Environment"},
            {"Ref": "BranchName"}
          ]]
        },
        "Stages": [{
            "Name": "Source",
            "Actions": [{
              "Name": "SourceAction",
              "ActionTypeId": {
                "Category": "Source",
                "Owner": "AWS",
                "Version": "1",
                "Provider": "CodeCommit"
              },
              "OutputArtifacts": [{
                "Name": "SourceOutput"
              }],
              "Configuration": {
                "RepositoryName": {
                  "Ref": "ProjectName"
                },
                "BranchName": {
                  "Ref": "BranchName"
                }
              },
              "RunOrder": 1
            }]
          },
          {
            "Name": "Build",
            "Actions": [{
              "Name": "Build",
              "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "OutputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {
                        "Ref": "ProjectName"
                      },
                      "dev"
                    ]]
                  }
                }
              },
              {
                "Name": "UnitTest",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "ProjectName"},
                      "unit-test"
                    ]]
                  }
                }
              },
              {
                "Name": "Lint",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "ProjectName"},
                      "lint"
                    ]]
                  }
                }
              },
              {
                "Name": "CalculateCosts",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "ProjectName"},
                      "calculate-costs"
                    ]]
                  }
                }
              },
              {
                "Name": "StaticAnalysis",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "ProjectName"},
                      "static-analysis"
                    ]]
                  }
                }
              }
            ]
          },
          {
            "Name": "Review",
            "Actions": [
              {
                "Name": "RequestReview",
                "ActionTypeId": {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "Manual"
                },
                "RunOrder": 1
              },
              {
                "Name": "ReviewApproval",
                "ActionTypeId": {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "Manual"
                },
                "RunOrder": 2,
                "Configuration": {
                  "NotificationArn": {
                    "Ref": "ReviewSNSTopic"
                  }
                }
              }
            ]
          }
        ],
        "ArtifactStore": {
          "Type": "S3",
          "Location" : {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [
                {"Ref": "ProjectName"},
                "microservice",
                "CodePipelineBucketName"
              ]]
            }
          }
        }
      }
    }
  },
  "Outputs": {
    "ReviewSNSTopic": {
      "Description": "The name of this SNS topic",
      "Value": {
        "Fn::GetAtt": [
          "ReviewSNSTopic",
          "TopicName"
        ]
      }
    }
  }
}
