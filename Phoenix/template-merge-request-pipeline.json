{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Generates a merge request pipeline.",
  "Parameters": {
    "ProjectName": {
      "Description": "The name of your project.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-project-name"
    },
    "ProjectDescription": {
      "Description": "A description of your project",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-project-description"
    },
    "PipelineName": {
      "Description": "The name of the CodePipeline.",
      "Type": "String"
    },
    "RepoName": {
      "Description": "The name of the CodeCommit git repo",
      "Type": "String"
    },
    "GitlabProjectId": {
      "Description": "The project id if the Gitlab project",
      "Type": "String"
    },
    "MergeRequestInternalId": {
      "Description": "The merge request internal id of the gitlab merge request",
      "Type": "String"
    },
    "SourceBranch": {
      "Description": "The name of the source branch which triggers this pipeline",
      "Type": "String"
    },
    "CodePipelineBucketName": {
      "Description": "The bucket name in which CodePipeline artifacts will be stored.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-code-pipeline-bucket-name"
    },
    "CodeBuildDockerImage": {
      "Description": "The ECR name (i.e '{account_id}.dkr.ecr.us-east-1.amazonaws.com/{image_name}:0.1.0') to biuld the image with.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-code-build-docker-image"
    },
    "CodeBuildServiceRoleArn": {
      "Description": "The CodeBuild service role that CodeBuild jobs assume.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-code-build-service-role-arn"
    },
    "MicroserviceBucketName": {
      "Description": "The bucket name in which cloudformation templates and lambda functions will be stored.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-bucket-name"
    },
    "CodePipelineServiceRoleArn": {
      "Description": "The CodePipeline service role that CodePipeline pipelines use.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-code-pipeline-service-role-arn"
    },
    "Version": {
      "Description": "The identifier/version associated with this deployment.",
      "Type": "String",
      "Default": "latest"
    }
  },
  "Resources": {
    "CodePipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn" : {"Ref": "CodePipelineServiceRoleArn"},
        "Name": {"Ref": "PipelineName"},
        "Stages": [{
            "Name": "Source",
            "Actions": [{
              "Name": "SourceAction",
              "ActionTypeId": {
                "Category": "Source",
                "Owner": "AWS",
                "Version": "1",
                "Provider": "CodeCommit"
              },
              "OutputArtifacts": [{
                "Name": "SourceOutput"
              }],
              "Configuration": {
                "RepositoryName": {
                  "Ref": "RepoName"
                },
                "BranchName": {
                  "Ref": "SourceBranch"
                }
              },
              "RunOrder": 1
            }]
          },
          {
            "Name": "Build",
            "Actions": [{
              "Name": "Build",
              "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "OutputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {"Ref": "PipelineName"}
                }
              },
              {
                "Name": "UnitTest",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "PipelineName"},
                      "unit-test"
                    ]]
                  }
                }
              },
              {
                "Name": "Lint",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "PipelineName"},
                      "lint"
                    ]]
                  }
                }
              }
            ]
          },
          {
            "Name": "DeployToECS",
            "Actions": [
              {
                "Name": "ECS",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "RoleArn": {"Ref": "CodePipelineServiceRoleArn"},
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "StackName": {
                    "Fn::Join": ["-", [
                      {"Ref": "PipelineName"},
                      "ecs",
                      "deploy"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-ecs-params-testing.json",
                  "TemplatePath": "BuildOutput::template-ecs.json"
                }
              },
              {
                "Name": "LambdaPostMergeRequest",
                "ActionTypeId": {
                  "Category": "Invoke",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "Lambda"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "name": {"Ref": "LambdaPostMergeRequest"},
                  "actionTypeId": {
                    "category": "Invoke",
                    "owner": "AWS",
                    "provider": "Lambda",
                    "version": "1"
                  },
                  "runOrder": 2,
                  "configuration": {
                    "FunctionName": {"Ref": "LambdaPostMergeRequest"},
                    "UserParameters": "{\"artifact\": \"BuildOutput\", \"file\": \"gitlab.json\"}"
                  },
                  "outputArtifacts": [],
                  "inputArtifacts": [
                    {"name": "BuildOutput"}
                  ]
                }
              }
            ]
          }
        ],
        "ArtifactStore": {
          "Type": "S3",
          "Location" : {"Ref": "CodePipelineBucketName"}
        }
      }
    },
    "CodeBuildSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {
          "Fn::Join": ["-", [{
              "Ref": "ProjectName"
            },
            "CodeBuild",
            "MR",
            {"Ref": "PipelineName"},
            "SG"
          ]]
        },
        "GroupDescription": {
          "Fn::Join": ["-", [
            {"Ref": "ProjectName"},
            "CodeBuild",
            "MR",
            {"Ref": "PipelineName"},
            "SG"
          ]]
        },
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              "dev",
              "vpc",
              "VPC"
            ]]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["-", [
              "codebuild",
              {"Ref": "PipelineName"},
              "merge-request",
              "sg"
            ]]}
          }
        ]
      }
    },
    "CodeBuild": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "CodeBuildSecurityGroup"}
          ],
          "Subnets": [
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ1"
              ]]
            }},
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ2"
              ]]
            }}
          ],
          "VpcId":  {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "VPC"
              ]]
            }
          }
        },
        "Artifacts": {
          "Type": "CODEPIPELINE",
          "NamespaceType": "BUILD_ID",
          "Name": {
            "Ref": "ProjectName"
          },
          "Packaging": "NONE"
        },
        "Description": {
          "Ref": "ProjectDescription"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name" : "AWS_ACCOUNT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "AWS::AccountId"}
            },
            {
              "Name" : "GITLAB_PROJECT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "GitlabProjectId"}
            },
            {
              "Name" : "MERGE_REQUEST_INTERNAL_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "MergeRequestInternalId"}
            },
            {
              "Name" : "PIPELINE_NAME",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "PipelineName"}
            },
            {
              "Name" : "REPO_NAME",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "RepoName"}
            },
            {
              "Name" : "SOURCE_BRANCH",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "SourceBranch"}
            }
          ],
          "Image": {
            "Ref": "CodeBuildDockerImage"
          },
          "PrivilegedMode": "true",
          "Type": "LINUX_CONTAINER"
        },
        "Name": {
          "Fn::Join": ["", [
            {"Ref": "PipelineName"}
          ]]
        },
        "ServiceRole": {
          "Ref": "CodeBuildServiceRoleArn"
        },
        "Source": {
          "BuildSpec": "Phoenix/buildspec.yml",
          "Type": "CODEPIPELINE"
        },
        "TimeoutInMinutes": 60,
        "Tags": []
      }
    },
    "CodeBuildUnitTest": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "CodeBuildSecurityGroup"}
          ],
          "Subnets": [
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ1"
              ]]
            }},
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ2"
              ]]
            }}
          ],
          "VpcId":  {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "VPC"
              ]]
            }
          }
        },
        "Artifacts": {
          "Type": "CODEPIPELINE",
          "NamespaceType": "BUILD_ID",
          "Name": {
            "Ref": "ProjectName"
          },
          "Packaging": "NONE"
        },
        "Description": {
          "Ref": "ProjectDescription"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name" : "AWS_ACCOUNT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "AWS::AccountId"}
            },
            {
              "Name" : "GITLAB_PROJECT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "GitlabProjectId"}
            },
            {
              "Name" : "MERGE_REQUEST_INTERNAL_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "MergeRequestInternalId"}
            },
            {
              "Name" : "PIPELINE_NAME",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "PipelineName"}
            },
            {
              "Name" : "REPO_NAME",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "RepoName"}
            },
            {
              "Name" : "SOURCE_BRANCH",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "SourceBranch"}
            }
          ],
          "Image": {
            "Ref": "CodeBuildDockerImage"
          },
          "PrivilegedMode": "true",
          "Type": "LINUX_CONTAINER"
        },
        "Name": {
          "Fn::Join": ["-", [
            {"Ref": "PipelineName"},
            "unit-test"
          ]]
        },
        "ServiceRole": {
          "Ref": "CodeBuildServiceRoleArn"
        },
        "Source": {
          "BuildSpec": "Phoenix/buildspec-unit-test.yml",
          "Type": "CODEPIPELINE"
        },
        "TimeoutInMinutes": 60,
        "Tags": []
      }
    },
    "CodeBuildLint": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "CodeBuildSecurityGroup"}
          ],
          "Subnets": [
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ1"
              ]]
            }},
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ2"
              ]]
            }}
          ],
          "VpcId":  {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "VPC"
              ]]
            }
          }
        },
        "Artifacts": {
          "Type": "CODEPIPELINE",
          "NamespaceType": "BUILD_ID",
          "Name": {
            "Ref": "ProjectName"
          },
          "Packaging": "NONE"
        },
        "Description": {
          "Ref": "ProjectDescription"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name" : "AWS_ACCOUNT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "AWS::AccountId"}
            },
            {
              "Name" : "GITLAB_PROJECT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "GitlabProjectId"}
            },
            {
              "Name" : "MERGE_REQUEST_INTERNAL_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "MergeRequestInternalId"}
            },
            {
              "Name" : "PIPELINE_NAME",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "PipelineName"}
            },
            {
              "Name" : "REPO_NAME",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "RepoName"}
            },
            {
              "Name" : "SOURCE_BRANCH",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "SourceBranch"}
            }
          ],
          "Image": {
            "Ref": "CodeBuildDockerImage"
          },
          "PrivilegedMode": "true",
          "Type": "LINUX_CONTAINER"
        },
        "Name": {
          "Fn::Join": ["-", [
            {"Ref": "PipelineName"},
            "lint"
          ]]
        },
        "ServiceRole": {
          "Ref": "CodeBuildServiceRoleArn"
        },
        "Source": {
          "BuildSpec": "Phoenix/buildspec-lint.yml",
          "Type": "CODEPIPELINE"
        },
        "TimeoutInMinutes": 60,
        "Tags": []
      }
    },
    "LambdaSG": {
      "Properties": {
        "GroupDescription": "Post Merge Request Lambda Security Group",
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Sub": [
              "${StackName}-lambda-sg", {
                "StackName": {"Ref": "AWS::StackName"}
              }
            ]}
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "dev-vpc-VPC"
        }
      },
      "Type": "AWS::EC2::SecurityGroup"
    },
    "LambdaPostMergeRequest": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": ["LambdaRole", "LambdaRolePolicy"],
      "Properties": {
        "Handler": "lambda_function.lambda_handler",
        "Role": { "Fn::GetAtt" : ["LambdaRole", "Arn"] },
        "Code": {
          "S3Bucket" : {"Ref": "MicroserviceBucketName"},
          "S3Key" : {"Fn::Join": ["/", [
            "lambda",
            {"Ref": "Version"},
            "post_mergerequests",
            "lambda_function.zip"
          ]]}
        },
        "Runtime": "python3.6",
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "LambdaSG"}
          ],
          "SubnetIds" : [
            {"Fn::ImportValue": "dev-vpc-PrivateSubnetAZ1"},
            {"Fn::ImportValue": "dev-vpc-PrivateSubnetAZ2"}
          ]
        },
        "Timeout": "25"
      }
    },
    "LambdaPostMergeRequestInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [ "LambdaPostMergeRequest", "Arn" ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "codepipeline.amazonaws.com"
      }
    },
    "LambdaRole": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com",
                  "s3.amazonaws.com",
                  "apigateway.amazonaws.com",
                  "codepipeline.amazonaws.com",
                  "codebuild.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Type": "AWS::IAM::Role"
    },
    "LambdaRolePolicy": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:*",
                "dynamodb:*",
                "cloudformation:*",
                "codepipeline:*",
                "codebuild:*",
                "s3:*",
                "ec2:*",
                "ssm:*",
                "kms:*",
                "logs:*",
                "xray:*",
                "sts:AssumeRole",
                "iam:CreateRole",
                "iam:PassRole",
                "iam:GetRole"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": { "Fn::Join": ["-", [
          { "Ref": "AWS::StackName"},
          "LambdaRole"
        ]]},
        "Roles": [
          {
            "Ref": "LambdaRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    }
  }
}
