{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Generates a merge request pipeline.",
  "Parameters": {
    "ProjectName": {
      "Description": "The name of your project.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-project-name"
    },
    "ProjectDescription": {
      "Description": "A description of your project",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-project-description"
    },
    "PipelineName": {
      "Description": "The name of the CodePipeline.",
      "Type": "String"
    },
    "RepoName": {
      "Description": "The name of the CodeCommit git repo",
      "Type": "String"
    },
    "SourceBranch": {
      "Description": "The name of the source branch which triggers this pipeline",
      "Type": "String"
    },
    "CodePipelineBucketName": {
      "Description": "The bucket name in which CodePipeline artifacts will be stored.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-code-pipeline-bucket-name"
    },
    "CodeBuildDockerImage": {
      "Description": "The ECR name (i.e '{account_id}.dkr.ecr.us-east-1.amazonaws.com/{image_name}:0.1.0') to biuld the image with.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-code-build-docker-image"
    },
    "CodeBuildServiceRoleArn": {
      "Description": "The CodeBuild service role that CodeBuild jobs assume.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-code-build-service-role-arn"
    },
    "CodePipelineServiceRoleArn": {
      "Description": "The CodePipeline service role that CodePipeline pipelines use.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-code-pipeline-service-role-arn"
    }
  },
  "Resources": {
    "CodePipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn" : {"Ref": "CodePipelineServiceRoleArn"},
        "Name": {
          "Fn::Join": ["-", [
            {"Ref": "SourceBranch"},
            "merge-request-branch"
          ]]
        },
        "Stages": [{
            "Name": "Source",
            "Actions": [{
              "Name": "SourceAction",
              "ActionTypeId": {
                "Category": "Source",
                "Owner": "AWS",
                "Version": "1",
                "Provider": "CodeCommit"
              },
              "OutputArtifacts": [{
                "Name": "SourceOutput"
              }],
              "Configuration": {
                "RepositoryName": {
                  "Ref": "RepoName"
                },
                "BranchName": {
                  "Ref": "SourceBranch"
                }
              },
              "RunOrder": 1
            }]
          },
          {
            "Name": "Build",
            "Actions": [{
              "Name": "Build",
              "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "OutputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "ProjectName"},
                      {"Ref": "SourceBranch"},
                      "merge-request"
                    ]]
                  }
                }
              },
              {
                "Name": "UnitTest",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "ProjectName"},
                      {"Ref": "SourceBranch"},
                      "unit-test"
                    ]]
                  }
                }
              },
              {
                "Name": "Lint",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "ProjectName"},
                      {"Ref": "SourceBranch"},
                      "lint"
                    ]]
                  }
                }
              },
              {
                "Name": "CalculateCosts",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "ProjectName"},
                      {"Ref": "SourceBranch"},
                      "calculate-costs"
                    ]]
                  }
                }
              },
              {
                "Name": "StaticAnalysis",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "ProjectName"},
                      {"Ref": "SourceBranch"},
                      "static-analysis"
                    ]]
                  }
                }
              }
            ]
          },
          {
            "Name": "NotifyGitlab",
            "Actions": [
              {
                "Name": "NotifyGitlab",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", [
                      {"Ref": "ProjectName"},
                      "gitlab-notify"
                    ]]
                  }
                }
              }
            ]
          }
        ],
        "ArtifactStore": {
          "Type": "S3",
          "Location" : {"Ref": "CodePipelineBucketName"}
        }
      }
    },
    "CodeBuildSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {
          "Fn::Join": ["-", [{
              "Ref": "ProjectName"
            },
            "CodeBuild",
            "MR",
            "SG"
          ]]
        },
        "GroupDescription": {
          "Fn::Join": ["-", [{
              "Ref": "ProjectName"
            },
            "CodeBuild",
            "MR",
            "SG"
          ]]
        },
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              "dev",
              "vpc",
              "VPC"
            ]]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["-", [
              {"Ref": "ProjectName"},
              "codebuild",
              {"Ref": "SourceBranch"},
              "merge-request",
              "sg"
            ]]}
          }
        ]
      }
    },
    "CodeBuildGitlabNotify": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "CodeBuildSecurityGroup"}
          ],
          "Subnets": [
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ1"
              ]]
            }},
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ2"
              ]]
            }}
          ],
          "VpcId":  {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "VPC"
              ]]
            }
          }
        },
        "Artifacts": {
          "Type": "CODEPIPELINE",
          "NamespaceType": "BUILD_ID",
          "Name": {
            "Ref": "ProjectName"
          },
          "Packaging": "NONE"
        },
        "Description": {
          "Ref": "ProjectDescription"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name" : "AWS_ACCOUNT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "AWS::AccountId"}
            }
          ],
          "Image": {
            "Ref": "CodeBuildDockerImage"
          },
          "PrivilegedMode": "true",
          "Type": "LINUX_CONTAINER"
        },
        "Name": {
          "Fn::Join": ["", [
            {"Ref": "ProjectName"},
            {"Ref": "SourceBranch"},
            "-unit-test"
          ]]
        },
        "ServiceRole": {
          "Ref": "CodeBuildServiceRoleArn"
        },
        "Source": {
          "BuildSpec": "Phoenix/buildspec-merge-request-gitlab-notify.yml",
          "Type": "CODEPIPELINE"
        },
        "TimeoutInMinutes": 60,
        "Tags": []
      }
    },
  }
}
