{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Generates all resources required for a microservice.",
  "Transform" : ["ProjectLambdaMacro"],
  "Conditions": {
    "ProjectUsesRootGitBranch" : {"Fn::Equals" : [
      "PHX_MACRO_GIT_ROOT_PROJECT_BRANCH","PHX_MACRO_GIT_CURRENT_PROJECT_BRANCH"
    ]}
  },
  "Resources": {
    "ECRMainRepository": {
      "Type": "AWS::ECR::Repository",
      "Properties": {
        "RepositoryName": {
          "Fn::Join": ["-", [
            "PHX_MACRO_PROJECT_NAME",
            "main"
          ]]
        },
        "RepositoryPolicyText": {
          "Version": "2008-10-17",
          "Statement": [{
              "Sid": "AllowPushPull",
              "Effect": "Allow",
              "Principal": {
                "AWS": ["PHX_MACRO_IAM_ROLE"]
              },
              "Action": [
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "ecr:BatchCheckLayerAvailability",
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload"
              ]
            },
            {
              "Sid": "CodeBuildAccess",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              },
              "Action": [
                "ecr:*"
              ]
            }
          ]
        }
      }
    },
    "CodeBuildBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "PHX_MACRO_CODE_BUILD_BUCKET_NAME",
        "LifecycleConfiguration": {
          "Rules": [{
            "ExpirationInDays": 180,
            "Status": "Enabled"
          }]
        }
      }
    },
    "CodePipelineBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "PHX_MACRO_CODE_PIPELINE_BUCKET_NAME",
        "LifecycleConfiguration": {
          "Rules": [{
            "ExpirationInDays": 180,
            "Status": "Enabled"
          }]
        }
      }
    },
    "LoadBalancerLogsBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "PHX_MACRO_LOAD_BALANCER_LOGS_BUCKET_NAME",
        "LifecycleConfiguration": {
          "Rules": [{
            "ExpirationInDays": 180,
            "Status": "Enabled"
          }]
        }
      }
    },
    "MasterTriggerSNSTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "GitMaster",
        "Subscription": [{
          "Endpoint": "PHX_MACRO_NOTIFICATION_EMAIL",
          "Protocol": "email"
        }],
        "TopicName": {
          "Fn::Join": ["-", [
            "master-branch-event-triggered-for",
            "PHX_MACRO_PROJECT_NAME"
          ]]
        }
      }
    },
    "CodePipelineFailedSNSTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "PipelineFailed",
        "Subscription": [{
          "Endpoint": "PHX_MACRO_NOTIFICATION_EMAIL",
          "Protocol": "email"
        }],
        "TopicName": {
          "Fn::Join": ["-", [
            "pipeline-failed-for",
            "PHX_MACRO_PROJECT_NAME"
          ]]
        }
      }
    },
    "CodePipelineApprovalSNSTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "CodePipeLn",
        "Subscription": [{
          "Endpoint": "PHX_MACRO_NOTIFICATION_EMAIL",
          "Protocol": "email"
        }],
        "TopicName": {
          "Fn::Join": ["-", [
            "code-pipeline-approval-required-for",
            "PHX_MACRO_PROJECT_NAME"
          ]]
        }
      }
    },
    "CodeCommitRepository": {
      "Type": "AWS::CodeCommit::Repository",
      "Condition": "ProjectUsesRootGitBranch",
      "Properties": {
        "RepositoryName": "PHX_MACRO_GIT_REPO_NAME",
        "RepositoryDescription": "PHX_MACRO_PROJECT_DESCRIPTION",
        "Triggers": [
          {
            "Name": "MasterTrigger",
            "CustomData": {
              "Fn::Join": [" ", [
                "Project",
                "PHX_MACRO_PROJECT_NAME"
              ]]
            },
            "DestinationArn": {"Ref": "MasterTriggerSNSTopic"},
            "Branches": [
              "PHX_MACRO_GIT_CURRENT_PROJECT_BRANCH"
            ],
            "Events": ["all"]
          }
        ]
      }
    },
    "CodeBuildServiceRoleArnParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": "/microservice/phoenix/global/code-build-service-role-arn",
        "Type": "String",
        "Value": "PHX_MACRO_IAM_ROLE",
        "Description": "The Code Build Service Role ARN"
      }
    },
    "CodeBuildSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {
          "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
            "CodeBuild",
            "SG"
          ]]
        },
        "GroupDescription": {
          "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
            "CodeBuild",
            "SG"
          ]]
        },
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              "dev",
              "vpc",
              "VPC"
            ]]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["-", [
              "PHX_MACRO_PROJECT_NAME",
              "codebuild",
              "sg"
            ]]}
          }
        ]
      }
    },
    "CodeBuildSecurityGroupParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": "/microservice/phoenix/global/code-build-security-group",
        "Type": "String",
        "Value": {"Ref": "CodeBuildSecurityGroup"},
        "Description": "The Code Build security group ID"
      }
    },
    "CodeBuild": {
      "Type": "AWS::CodeBuild::Project",
      "DependsOn": ["CodeBuildBucket", "CodePipelineBucket"],
      "Properties": {
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "CodeBuildSecurityGroup"}
          ],
          "Subnets": [
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ1"
              ]]
            }},
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ2"
              ]]
            }}
          ],
          "VpcId":  {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "VPC"
              ]]
            }
          }
        },
        "Artifacts": {
          "Type": "S3",
          "Location": "PHX_MACRO_CODE_BUILD_BUCKET_NAME",
          "NamespaceType": "BUILD_ID",
          "Name": "PHX_MACRO_PROJECT_NAME",
          "Packaging": "NONE"
        },
        "BadgeEnabled": "true",
        "Cache": {
          "Location": {
            "Fn::Join": ["", ["PHX_MACRO_CODE_BUILD_BUCKET_NAME",
              "/",
              "PHX_MACRO_PROJECT_NAME",
              "-cache"
            ]]
          },
          "Type": "S3"
        },
        "Description": "PHX_MACRO_PROJECT_DESCRIPTION",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name" : "AWS_ACCOUNT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "AWS::AccountId"}
            },
            {
              "Name" : "PROJECT_NAME",
              "Type" : "PLAINTEXT",
              "Value" : "PHX_MACRO_PROJECT_NAME"
            },
            {
              "Name" : "LAMBDA_BUCKET_NAME",
              "Type" : "PLAINTEXT",
              "Value" : "PHX_MACRO_LAMBDA_BUCKET_NAME"
            },
            {
              "Name" : "GITLAB_ACCESS_TOKEN",
              "Type" : "PARAMETER_STORE",
              "Value" : "/global/gitlab/codebuild/access-token"
            },
            {
              "Name" : "GITLAB_URL",
              "Type" : "PARAMETER_STORE",
              "Value": {"Fn::Join": ["/", [
                "/microservice",
                {"Ref": "ProjectName"},
                "global/gitlab-url"
              ]]}
            }
          ],
          "Image": "PHX_MACRO_CODE_BUILD_DOCKER_IMAGE",
          "PrivilegedMode": "true",
          "Type": "LINUX_CONTAINER"
        },
        "Name": "PHX_MACRO_PROJECT_NAME",
        "ServiceRole": "PHX_MACRO_IAM_ROLE",
        "Source": {
          "BuildSpec": "Phoenix/buildspec.yml",
          "Type": "CODECOMMIT",
          "Location": {
            "Fn::Join": ["", [
              "https://git-codecommit.",
              {"Ref": "AWS::Region"},
              ".amazonaws.com/v1/repos/",
              "PHX_MACRO_PROJECT_NAME"
            ]]
          }
        },
        "TimeoutInMinutes": 60,
        "Tags": []
      }
    },
    "CodeBuildUnitTest": {
      "Type": "AWS::CodeBuild::Project",
      "DependsOn": ["CodeBuildBucket", "CodePipelineBucket"],
      "Properties": {
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "CodeBuildSecurityGroup"}
          ],
          "Subnets": [
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ1"
              ]]
            }},
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ2"
              ]]
            }}
          ],
          "VpcId":  {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "VPC"
              ]]
            }
          }
        },
        "Artifacts": {
          "Type": "S3",
          "Location": "PHX_MACRO_CODE_BUILD_BUCKET_NAME",
          "NamespaceType": "BUILD_ID",
          "Name": "PHX_MACRO_PROJECT_NAME",
          "Packaging": "NONE"
        },
        "BadgeEnabled": "true",
        "Cache": {
          "Location": {
            "Fn::Join": ["", ["PHX_MACRO_CODE_BUILD_BUCKET_NAME",
              "/",
              "PHX_MACRO_PROJECT_NAME",
              "-cache"
            ]]
          },
          "Type": "S3"
        },
        "Description": "PHX_MACRO_PROJECT_DESCRIPTION",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name" : "AWS_ACCOUNT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "AWS::AccountId"}
            },
            {
              "Name" : "PROJECT_NAME",
              "Type" : "PLAINTEXT",
              "Value" : "PHX_MACRO_PROJECT_NAME"
            },
            {
              "Name" : "LAMBDA_BUCKET_NAME",
              "Type" : "PLAINTEXT",
              "Value" : "PHX_MACRO_LAMBDA_BUCKET_NAME"
            },
            {
              "Name" : "GITLAB_UNIT_TEST_ACCESS_TOKEN",
              "Type" : "PARAMETER_STORE",
              "Value" : "/global/gitlab/codebuild/unit-test-access-token"
            },
            {
              "Name" : "GITLAB_URL",
              "Type" : "PARAMETER_STORE",
              "Value": {"Fn::Join": ["/", [
                "/microservice",
                {"Ref": "ProjectName"},
                "global/gitlab-url"
              ]]}
            }
          ],
          "Image": "PHX_MACRO_CODE_BUILD_DOCKER_IMAGE",
          "PrivilegedMode": "true",
          "Type": "LINUX_CONTAINER"
        },
        "Name": {
          "Fn::Join": ["", ["PHX_MACRO_PROJECT_NAME",
            "-unit-test"
          ]]
        },
        "ServiceRole": "PHX_MACRO_IAM_ROLE",
        "Source": {
          "BuildSpec": "Phoenix/buildspec-unit-test.yml",
          "Type": "CODECOMMIT",
          "Location": {
            "Fn::Join": ["", [
              "https://git-codecommit.",
              {"Ref": "AWS::Region"},
              ".amazonaws.com/v1/repos/",
              "PHX_MACRO_PROJECT_NAME"
            ]]
          }
        },
        "TimeoutInMinutes": 60,
        "Tags": []
      }
    },
    "CodeBuildLint": {
      "Type": "AWS::CodeBuild::Project",
      "DependsOn": ["CodeBuildBucket", "CodePipelineBucket"],
      "Properties": {
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "CodeBuildSecurityGroup"}
          ],
          "Subnets": [
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ1"
              ]]
            }},
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ2"
              ]]
            }}
          ],
          "VpcId":  {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "VPC"
              ]]
            }
          }
        },
        "Artifacts": {
          "Type": "S3",
          "Location": "PHX_MACRO_CODE_BUILD_BUCKET_NAME",
          "NamespaceType": "BUILD_ID",
          "Name": "PHX_MACRO_PROJECT_NAME",
          "Packaging": "NONE"
        },
        "BadgeEnabled": "true",
        "Cache": {
          "Location": {
            "Fn::Join": ["", ["PHX_MACRO_CODE_BUILD_BUCKET_NAME",
              "/",
              "PHX_MACRO_PROJECT_NAME",
              "-cache"
            ]]
          },
          "Type": "S3"
        },
        "Description": "PHX_MACRO_PROJECT_DESCRIPTION",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name" : "AWS_ACCOUNT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "AWS::AccountId"}
            },
            {
              "Name" : "PROJECT_NAME",
              "Type" : "PLAINTEXT",
              "Value" : "PHX_MACRO_PROJECT_NAME"
            },
            {
              "Name" : "LAMBDA_BUCKET_NAME",
              "Type" : "PLAINTEXT",
              "Value" : "PHX_MACRO_LAMBDA_BUCKET_NAME"
            },
            {
              "Name" : "GITLAB_LINT_ACCESS_TOKEN",
              "Type" : "PARAMETER_STORE",
              "Value" : "/global/gitlab/codebuild/lint-access-token"
            },
            {
              "Name" : "GITLAB_URL",
              "Type" : "PARAMETER_STORE",
              "Value": {"Fn::Join": ["/", [
                "/microservice",
                {"Ref": "ProjectName"},
                "global/gitlab-url"
              ]]}
            }
          ],
          "Image": "PHX_MACRO_CODE_BUILD_DOCKER_IMAGE",
          "PrivilegedMode": "true",
          "Type": "LINUX_CONTAINER"
        },
        "Name": {
          "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
            "lint"
          ]]
        },
        "ServiceRole": "PHX_MACRO_IAM_ROLE",
        "Source": {
          "BuildSpec": "Phoenix/buildspec-lint.yml",
          "Type": "CODECOMMIT",
          "Location": {
            "Fn::Join": ["", [
              "https://git-codecommit.",
              {"Ref": "AWS::Region"},
              ".amazonaws.com/v1/repos/",
              "PHX_MACRO_PROJECT_NAME"
            ]]
          }
        },
        "TimeoutInMinutes": 60,
        "Tags": []
      }
    },
    "CodeBuildPostProdDeploy": {
      "Type": "AWS::CodeBuild::Project",
      "DependsOn": ["CodeBuildBucket", "CodePipelineBucket"],
      "Properties": {
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "CodeBuildSecurityGroup"}
          ],
          "Subnets": [
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ1"
              ]]
            }},
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "PrivateSubnetAZ2"
              ]]
            }}
          ],
          "VpcId":  {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [
                "dev",
                "vpc",
                "VPC"
              ]]
            }
          }
        },
        "Artifacts": {
          "Type": "S3",
          "Location": "PHX_MACRO_CODE_BUILD_BUCKET_NAME",
          "NamespaceType": "BUILD_ID",
          "Name": "PHX_MACRO_PROJECT_NAME",
          "Packaging": "NONE"
        },
        "BadgeEnabled": "true",
        "Cache": {
          "Location": {
            "Fn::Join": ["", ["PHX_MACRO_CODE_BUILD_BUCKET_NAME",
              "/",
              "PHX_MACRO_PROJECT_NAME",
              "-cache"
            ]]
          },
          "Type": "S3"
        },
        "Description": "PHX_MACRO_PROJECT_DESCRIPTION",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name" : "AWS_ACCOUNT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "AWS::AccountId"}
            }
          ],
          "Image": "PHX_MACRO_CODE_BUILD_DOCKER_IMAGE",
          "PrivilegedMode": "true",
          "Type": "LINUX_CONTAINER"
        },
        "Name": {
          "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
            "post-prod-deploy"
          ]]
        },
        "ServiceRole": "PHX_MACRO_IAM_ROLE",
        "Source": {
          "BuildSpec": "Phoenix/buildspec-post-prod-deploy.yml",
          "Type": "CODECOMMIT",
          "Location": {
            "Fn::Join": ["", [
              "https://git-codecommit.",
              {"Ref": "AWS::Region"},
              ".amazonaws.com/v1/repos/",
              "PHX_MACRO_PROJECT_NAME"
            ]]
          }
        },
        "TimeoutInMinutes": 60,
        "Tags": []
      }
    },
    "CodePipelineServiceRoleArnParam": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Name": "/microservice/phoenix/global/code-pipeline-service-role-arn",
        "Type": "String",
        "Value": "PHX_MACRO_IAM_ROLE",
        "Description": "The Code Pipeline Service Role ARN"
      }
    },
    "CodePipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "DependsOn": ["CodeBuildBucket", "CodePipelineBucket"],
      "Properties": {
        "RoleArn": "PHX_MACRO_IAM_ROLE",
        "Name": "PHX_MACRO_PROJECT_NAME",
        "Stages": [{
            "Name": "Source",
            "Actions": [{
              "Name": "SourceAction",
              "ActionTypeId": {
                "Category": "Source",
                "Owner": "AWS",
                "Version": "1",
                "Provider": "CodeCommit"
              },
              "OutputArtifacts": [{
                "Name": "SourceOutput"
              }],
              "Configuration": {
                "RepositoryName": "PHX_MACRO_GIT_REPO_NAME",
                "BranchName": "PHX_MACRO_GIT_CURRENT_PROJECT_BRANCH"
              },
              "RunOrder": 1
            }]
          },
          {
            "Name": "Build",
            "Actions": [{
              "Name": "Build",
              "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "OutputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": "PHX_MACRO_PROJECT_NAME"
                }
              },
              {
                "Name": "UnitTest",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
                      "unit-test"
                    ]]
                  }
                }
              },
              {
                "Name": "Lint",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
                      "lint"
                    ]]
                  }
                }
              }
            ]
          },
          {
            "Name": "DeployToTesting",
            "Actions": [
              {
                "Name": "Database",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "database",
                      "testing"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-database-params-testing.json",
                  "TemplatePath": "BuildOutput::template-database.json"
                }
              },
              {
                "Name": "EC2",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "ec2",
                      "testing"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-ec2-params-testing.json",
                  "TemplatePath": "BuildOutput::template-ec2.json"
                }
              },
              {
                "Name": "Lambda",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "lambda",
                      "testing"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-lambda-params-testing.json",
                  "TemplatePath": "BuildOutput::template-lambda.json"
                }
              },
              {
                "Name": "APIGatewayDomain",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-custom-domain",
                      "testing"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-custom-domain-params-testing.json",
                  "TemplatePath": "BuildOutput::template-api-custom-domain.json"
                }
              },
              {
                "Name": "V0_APIDocumentation",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-documentation-v0",
                      "testing"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-documentation-v0-params-testing.json",
                  "TemplatePath": "BuildOutput::template-api-documentation.json"
                }
              },
              {
                "Name": "APIGateway",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 2,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api",
                      "testing"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-params-testing.json",
                  "TemplatePath": "BuildOutput::template-api.json"
                }
              },
              {
                "Name": "DatabaseMigration",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 2,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
                      "rds-migration",
                      "testing"
                    ]]
                  }
                }
              },
              {
                "Name": "ECSMainService",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 2,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "ecs",
                      "main",
                      "testing"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-ecs-task-main-params-testing.json",
                  "TemplatePath": "BuildOutput::template-ecs-task.json"
                }
              },
              {
                "Name": "APIGatewayInternals",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 3,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-internals",
                      "testing"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-internals-params-testing.json",
                  "TemplatePath": "BuildOutput::template-api-internals.json"
                }
              },
              {
                "Name": "APIGatewayDeploy",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 4,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-deployment",
                      "testing"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-deployment-params-testing.json",
                  "TemplatePath": "BuildOutput::template-api-deployment.json"
                }
              },
              {
                "Name": "PublishAPIDocumentation",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 5,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
                      "api-documentation",
                      "testing"
                    ]]
                  }
                }
              },
              {
                "Name": "IntegrationTest",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 5,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
                      "integration-test",
                      "testing"
                    ]]
                  }
                }
              }
            ]
          },
          {
            "Name": "TestingApprovalStage",
            "Actions": [
              {
                "Name": "TestingManualApprovalStep",
                "ActionTypeId": {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "Manual"
                },
                "RunOrder": 1,
                "Configuration": {
                  "NotificationArn": {"Ref": "CodePipelineApprovalSNSTopic"}
                }
              }
            ]
          },
          {
            "Name": "DeployToEndToEnd",
            "Actions": [
              {
                "Name": "Database",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "database",
                      "e2e"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-database-params-e2e.json",
                  "TemplatePath": "BuildOutput::template-database.json"
                }
              },
              {
                "Name": "EC2",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "ec2",
                      "e2e"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-ec2-params-e2e.json",
                  "TemplatePath": "BuildOutput::template-ec2.json"
                }
              },
              {
                "Name": "Lambda",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "lambda",
                      "e2e"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-lambda-params-e2e.json",
                  "TemplatePath": "BuildOutput::template-lambda.json"
                }
              },
              {
                "Name": "APIGatewayDomain",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-custom-domain",
                      "e2e"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-custom-domain-params-e2e.json",
                  "TemplatePath": "BuildOutput::template-api-custom-domain.json"
                }
              },
              {
                "Name": "V0_APIDocumentation",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-documentation-v0",
                      "e2e"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-documentation-v0-params-e2e.json",
                  "TemplatePath": "BuildOutput::template-api-documentation.json"
                }
              },
              {
                "Name": "APIGateway",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 2,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api",
                      "e2e"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-params-e2e.json",
                  "TemplatePath": "BuildOutput::template-api.json"
                }
              },
              {
                "Name": "DatabaseMigration",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 2,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
                      "rds-migration",
                      "e2e"
                    ]]
                  }
                }
              },
              {
                "Name": "ECSMainService",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 2,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "ecs",
                      "main",
                      "e2e"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-ecs-task-main-params-e2e.json",
                  "TemplatePath": "BuildOutput::template-ecs-task.json"
                }
              },
              {
                "Name": "APIGatewayInternals",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 3,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-internals",
                      "e2e"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-internals-params-e2e.json",
                  "TemplatePath": "BuildOutput::template-api-internals.json"
                }
              },
              {
                "Name": "APIGatewayDeploy",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 4,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-deployment",
                      "e2e"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-deployment-params-e2e.json",
                  "TemplatePath": "BuildOutput::template-api-deployment.json"
                }
              },
              {
                "Name": "PublishAPIDocumentation",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 5,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
                      "api-documentation",
                      "e2e"
                    ]]
                  }
                }
              },
              {
                "Name": "IntegrationTest",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 5,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
                      "integration-test",
                      "e2e"
                    ]]
                  }
                }
              }
            ]
          },
          {
          "Name": "ProdApprovalStage",
          "Actions": [
          {
            "Name": "ProdManualApprovalStep",
            "ActionTypeId": {
              "Category": "Approval",
              "Owner": "AWS",
              "Version": "1",
              "Provider": "Manual"
            },
            "RunOrder": 1,
            "Configuration": {
              "NotificationArn": {"Ref": "CodePipelineApprovalSNSTopic"}
            }
          }
        ]
      },
          {
            "Name": "DeployToProduction",
            "Actions": [
              {
                "Name": "Database",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "database",
                      "prod"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-database-params-prod.json",
                  "TemplatePath": "BuildOutput::template-database.json"
                }
              },
              {
                "Name": "EC2",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "ec2",
                      "prod"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-ec2-params-prod.json",
                  "TemplatePath": "BuildOutput::template-ec2.json"
                }
              },
              {
                "Name": "Lambda",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "lambda",
                      "prod"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-lambda-params-prod.json",
                  "TemplatePath": "BuildOutput::template-lambda.json"
                }
              },
              {
                "Name": "APIGatewayDomain",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-custom-domain",
                      "prod"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-custom-domain-params-prod.json",
                  "TemplatePath": "BuildOutput::template-api-custom-domain.json"
                }
              },
              {
                "Name": "V0_APIDocumentation",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 1,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-documentation-v0",
                      "prod"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-documentation-v0-params-prod.json",
                  "TemplatePath": "BuildOutput::template-api-documentation.json"
                }
              },
              {
                "Name": "APIGateway",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 2,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api",
                      "prod"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-params-prod.json",
                  "TemplatePath": "BuildOutput::template-api.json"
                }
              },
              {
                "Name": "DatabaseMigration",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 2,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
                      "rds-migration",
                      "prod"
                    ]]
                  }
                }
              },
              {
                "Name": "ECSMainService",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 2,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "ecs",
                      "main",
                      "prod"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-ecs-task-main-params-prod.json",
                  "TemplatePath": "BuildOutput::template-ecs-task.json"
                }
              },
              {
                "Name": "APIGatewayInternals",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 3,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-internals",
                      "prod"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-internals-params-prod.json",
                  "TemplatePath": "BuildOutput::template-api-internals.json"
                }
              },
              {
                "Name": "APIGatewayDeploy",
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CloudFormation"
                },
                "InputArtifacts": [{
                  "Name": "BuildOutput"
                }],
                "RunOrder": 4,
                "Configuration": {
                  "ActionMode": "CREATE_UPDATE",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": "PHX_MACRO_IAM_ROLE",
                  "StackName": {
                    "Fn::Join": ["-", [
                      "PHX_MACRO_PROJECT_NAME",
                      "api-deployment",
                      "prod"
                    ]]
                  },
                  "TemplateConfiguration": "BuildOutput::t-api-deployment-params-prod.json",
                  "TemplatePath": "BuildOutput::template-api-deployment.json"
                }
              },
              {
                "Name": "PublishAPIDocumentation",
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 5,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
                      "api-documentation",
                      "prod"
                    ]]
                  }
                }
              },
              {
                "Name": "PostProdDeploy",
                "ActionTypeId": {
                  "Category": "Test",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeBuild"
                },
                "InputArtifacts": [{
                  "Name": "SourceOutput"
                }],
                "RunOrder": 6,
                "Configuration": {
                  "ProjectName": {
                    "Fn::Join": ["-", ["PHX_MACRO_PROJECT_NAME",
                      "post-prod-deploy"
                    ]]
                  }
                }
              }
            ]
          }
        ],
        "ArtifactStore": {
          "Type": "S3",
          "Location": {"Ref": "CodePipelineBucket"}
        }
      }
    },
    "CodePipelineFailedCloudWatchRule": {
      "Type" : "AWS::Events::Rule",
      "Properties" : {
        "Description" : "CodePipelineFailEvent",
        "EventPattern" : {
          "source": [ "aws.codepipeline" ],
          "detail-type": [ "CodePipeline Pipeline Execution State Change" ],
          "detail": {"state": ["FAILED"]},
          "resources": [{"Ref": "CodePipeline"}]
        },
        "State" : "ENABLED",
        "Targets" : [ {"Arn": {"Ref": "CodePipelineFailedSNSTopic"},
          "Id": {"Fn::Join": ["-", ["event-pipeline-failed-for", "PHX_MACRO_PROJECT_NAME"] ]
          } } ]
      }
    }
  }
}
