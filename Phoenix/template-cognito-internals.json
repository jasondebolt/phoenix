{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Adds additional Cognito configuration that requires custom Lambda CloudFormation resources",
  "Transform" : ["ProjectLambdaMacro"],
  "Parameters": {
    "Environment": {
      "Description": "The environment (dev, testing, prod, etc.) to deploy to.",
      "Type": "String"
    },
    "ResourceServerName": {
      "Description": "The name of the Cognito resource server",
      "MinLength": "1",
      "MaxLength": "20",
      "AllowedPattern": "[a-z]*",
      "Type": "String"
    },
    "ResourceServerIdentifier": {
      "Description": "The identifier of the Cognito resource server",
      "MinLength": "1",
      "MaxLength": "20",
      "AllowedPattern": "[a-z]*",
      "Type": "String"
    },
    "CustomDomainPrefix": {
      "Description": "The prefix for your custom auth domain.",
      "Type": "String",
      "Default": "auth"
    },
    "DomainPrefix": {
      "Description": "The prefix for your cognito (non-custom) auth domain --> https://{domain-prefix}.auth.us-east-1.amazoncognito.com",
      "Type": "String"
    },
    "UseCustomDomain": {
      "Description": "Whether to create a custom cognito domain (Only 4 allowed per AWS account).",
      "Type": "String",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Default": "false"
    },
    "Version": {
      "Description": "The identifier/version within the S3Key where the version of Lambda code intented to be deployed in this CloudFormation stack can be found (s3://bucket/{identifier}/foo/foo.py). In non-dev environments, this identifier may be v_{first 7 chars of git SHA1}. In dev, this may be a developers username. If nothing else, changes in this parameter value will update the stack.",
      "Type": "String"
    }
  },
  "Resources": {
    "LambdaCognitoInternals": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "lambda_function.lambda_handler",
        "Role": {"PhoenixSSM": "/microservice/{ProjectName}/global/iam-role"},
        "Code": {
          "S3Bucket" : {"PhoenixSSM": "/microservice/{ProjectName}/global/lambda-bucket-name"},
          "S3Key": {
            "Fn::Join": ["/", [
              {"Ref": "Version"},
              "cognito_internals",
              "lambda_function.zip"
            ]]
          }
        },
        "Runtime": "python3.6",
        "Timeout": "25"
      }
    },
    "CustomResourceCognitoInternals": {
      "Type": "Custom::CognitoInternals",
      "DependsOn": "LambdaCognitoInternals",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": ["LambdaCognitoInternals", "Arn"]
        },
        "LambdaVersion": {"Ref": "Version"},
        "UserPoolId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "cognito",
              {"Ref": "Environment"},
              "UserPoolId"
            ]]
          }
        },
        "ClientId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "cognito",
              {"Ref": "Environment"},
              "AppClientId"
            ]]
          }
        },
        "CognitoDomain": {"Fn::Join": ["-", [
          {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
          {"Ref": "Environment"}
        ]]},
        "APIDomain": {"PhoenixSSM": "/microservice/{ProjectName}/global/domain"},
        "AuthDomain": {"Fn::Join": [".", [
          {"Ref": "CustomDomainPrefix"},
          {"PhoenixSSM": "/microservice/{ProjectName}/global/domain"}
        ]]},
        "DomainPrefix": {"Fn::Join": ["-", [
          {"Ref": "DomainPrefix"},
          {"Ref": "Environment"}
        ]]},
        "CustomDomain": {"Fn::Join": [".", [
          {"Ref": "Environment"},
          {"Ref": "CustomDomainPrefix"},
          {"PhoenixSSM": "/microservice/{ProjectName}/global/domain"}
        ]]},
        "UseCustomDomain": {"Ref": "UseCustomDomain"},
        "AuthSSLCertificateARN": {"PhoenixSSM": "/microservice/{ProjectName}/global/ssl-certificate-arn-auth"},
        "HostedZoneId": {"PhoenixSSM": "/microservice/{ProjectName}/global/hosted-zone-id"},
        "ResourceServerName": {"Ref": "ResourceServerName"},
        "ResourceServerIdentifier": {"Ref": "ResourceServerIdentifier"},
        "ResourceServerScope": "external"
      }
    }
  }
}
