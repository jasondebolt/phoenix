{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description" : "Deploys an API (RESTful or not)",
  "Transform" : ["__PROJECT_NAME__LambdaMacro"],
  "Parameters": {
    "Environment": {
      "Description": "The environment (dev, testing, prod, etc.) to deploy to.",
      "Type": "String"
    },
    "VPCPrefix": {
      "Description": "The 'export' name prefix of the cloudformation stack for the VPC used by this service.",
      "Type": "String"
    },
    "Version": {
      "Description": "The identifier/version associated with this API.",
      "Type": "String"
    }
  },
  "Conditions": {
    "IsProd" : {"Fn::Equals" : [
      {"Ref" : "Environment"},
      "prod"
    ]}
  },
  "Resources": {
    "RestAPI": {
      "Type" : "AWS::ApiGateway::RestApi",
      "DependsOn": ["APIUser"],
      "Properties" : {
        "Description" : {"Fn::Join": ["", [
          "The ",
          {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
          " REST API (Release Candidate ",
          {"Ref": "Version"},
          ")"
        ]]},
        "Name" : { "Fn::Join": ["-",  [
          {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
          "api",
          { "Ref": "Environment" }
        ]]},
        "Policy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {"Fn::Join": ["", [
                    "arn:aws:iam::",
                    {"Ref": "AWS::AccountId"},
                    ":root"
                  ]]},
                  {"PhoenixSSM": "/microservice/{ProjectName}/global/iam-role"},
                  {"Fn::Join": ["", [
                    "arn:aws:iam::",
                    {"Ref": "AWS::AccountId"},
                    ":role/",
                    "PhoenixUIAdmins"
                  ]]},
                  {"Fn::If": [
                    "IsProd",
                    { "Ref" : "AWS::NoValue" },
                    {"Fn::GetAtt": [
                      "APIUser",
                      "Arn"
                    ]}
                  ]}
                ]
              },
              "Action": "execute-api:Invoke",
              "Resource": [
                "execute-api:/*/*/*"
              ]
            }
          ]
        }
      }
    },
    "RestAPIDoc": {
      "Type" : "AWS::ApiGateway::DocumentationPart",
      "Properties" : {
        "Location" : {
          "Type" : "API"
        },
        "Properties": {
          "Fn::Join": ["\n", [
            "{",
              "\t\"info\": {",
                "\t\t\"description\": \"The Phoenix API.\"",
              "\t}",
            "}"
          ]]
        },
        "RestApiId" : {"Ref": "RestAPI"}
      }
    },
    "ExamplesResource": {
      "Type" : "AWS::ApiGateway::Resource",
      "Properties" : {
        "ParentId" : { "Fn::GetAtt": ["RestAPI", "RootResourceId"] },
        "PathPart" : "examples",
        "RestApiId" : { "Ref": "RestAPI" }
      }
    },
    "ExamplesGet": {
      "Type" : "AWS::ApiGateway::Method",
      "Properties" : {
        "RestApiId" : { "Ref": "RestAPI" },
        "AuthorizationType" : "AWS_IAM",
        "HttpMethod": "GET",
        "ResourceId" : {"Ref": "ExamplesResource"},
        "RequestParameters": {
          "method.request.querystring.error": false
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false,
              "method.response.header.content-length": false,
              "method.response.header.date": false,
              "method.response.header.etag": false,
              "method.response.header.x-powered-by": false
            }
          },
          {"StatusCode": "400"},
          {"StatusCode": "401"},
          {"StatusCode": "403"},
          {"StatusCode": "404"},
          {"StatusCode": "500"}
        ],
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode" : "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.content-length": "integration.response.body.headers.content-length",
                "method.response.header.date": "integration.response.body.headers.date",
                "method.response.header.etag": "integration.response.body.headers.etag",
                "method.response.header.x-powered-by": "integration.response.body.headers.x-powered-by"
              },
              "ResponseTemplates" : {
                "application/json": ""
              }
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "ContentHandling": "CONVERT_TO_TEXT",
          "Uri": {"Fn::Join": ["", [
            "arn:aws:apigateway:",
            { "Ref": "AWS::Region" },
            ":lambda:path/2015-03-31/functions/",
            { "Fn::ImportValue": { "Fn::Join": ["-", [ {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"}, "lambda", {"Ref": "Environment"}, "LambdaVPCProxyArn" ]] } },
            "/invocations"
          ]]},
          "RequestTemplates": {
            "application/json": ""
          }
        }
      }
    },
    "ExampleResource": {
      "Type" : "AWS::ApiGateway::Resource",
      "DependsOn": ["ExamplesResource"],
      "Properties" : {
        "ParentId" : {"Ref": "ExamplesResource"},
        "PathPart" : "{id}",
        "RestApiId" : { "Ref": "RestAPI" }
      }
    },
    "ExampleGet": {
      "Type" : "AWS::ApiGateway::Method",
      "Properties" : {
        "RestApiId" : { "Ref": "RestAPI" },
        "AuthorizationType" : "AWS_IAM",
        "HttpMethod": "GET",
        "ResourceId" : { "Ref": "ExampleResource" },
        "RequestParameters": {
          "method.request.querystring.name": true,
          "method.request.path.id": true
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false,
              "method.response.header.content-length": false,
              "method.response.header.date": false,
              "method.response.header.etag": false,
              "method.response.header.x-powered-by": false
            }
          },
          {"StatusCode": "400"},
          {"StatusCode": "401"},
          {"StatusCode": "403"},
          {"StatusCode": "404"},
          {"StatusCode": "500"}
        ],
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode" : "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.content-length": "integration.response.body.headers.content-length",
                "method.response.header.date": "integration.response.body.headers.date",
                "method.response.header.etag": "integration.response.body.headers.etag",
                "method.response.header.x-powered-by": "integration.response.body.headers.x-powered-by"
              },
              "ResponseTemplates" : {
                "application/json": ""
              }
            }
          ],
          "RequestParameters": {
            "integration.request.querystring.name": "method.request.querystring.name"
          },
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "ContentHandling": "CONVERT_TO_TEXT",
          "Uri": {"Fn::Join": ["", [
            "arn:aws:apigateway:",
            { "Ref": "AWS::Region" },
            ":lambda:path/2015-03-31/functions/",
            { "Fn::ImportValue": { "Fn::Join": ["-", [ {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"}, "lambda", {"Ref": "Environment"}, "LambdaVPCProxyArn" ]] } },
            "/invocations"
          ]]},
          "RequestTemplates": {
            "application/json": ""
          }
        }
      }
    },
    "ProjectsResource": {
      "Type" : "AWS::ApiGateway::Resource",
      "Properties" : {
        "ParentId" : { "Fn::GetAtt": ["RestAPI", "RootResourceId"] },
        "PathPart" : "projects",
        "RestApiId" : { "Ref": "RestAPI" }
      }
    },
    "ProjectsGet": {
      "Type" : "AWS::ApiGateway::Method",
      "Properties" : {
        "RestApiId" : { "Ref": "RestAPI" },
        "AuthorizationType" : "AWS_IAM",
        "HttpMethod": "GET",
        "ResourceId" : { "Ref": "ProjectsResource" },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false
            },
            "ResponseModels": {
              "application/json": {"Ref": "StacksModel"}
            }
          }
        ],
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates" : { "application/json": "" },
              "StatusCode" : "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "ContentHandling": "CONVERT_TO_TEXT",
          "Uri": {"Fn::Join": ["", [
            "arn:aws:apigateway:",
            { "Ref": "AWS::Region" },
            ":lambda:path/2015-03-31/functions/",
            {"Fn::ImportValue": {"Fn::Join": ["-", [{"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},"lambda",{"Ref": "Environment"},"LambdaProjectsArn"]]} },
            "/invocations"
          ]]},
          "RequestTemplates": {
            "application/json": ""
          }
        }
      }
    },
    "ProjectsGetDoc": {
      "Type" : "AWS::ApiGateway::DocumentationPart",
      "Properties" : {
        "Location" : {
          "Type": "METHOD",
          "Path": "/projects",
          "Method": "GET"
        },
        "Properties": {
          "Fn::Join": ["\n", [
            "{",
              "\t\"info\": {",
                "\t\t\"description\": \"Gets a list of all project account-roles (i.e [3818471741-ProjectAdmins, ...])\"",
              "\t}",
            "}"
          ]]
        },
        "RestApiId" : {"Ref": "RestAPI"}
      }
    },
    "ProjectResource": {
      "Type" : "AWS::ApiGateway::Resource",
      "DependsOn": ["ProjectsResource"],
      "Properties" : {
        "ParentId" : {"Ref": "ProjectsResource"},
        "PathPart" : "{project-account-role}",
        "RestApiId" : { "Ref": "RestAPI" }
      }
    },
    "ProjectGet": {
      "Type" : "AWS::ApiGateway::Method",
      "Properties" : {
        "RestApiId" : { "Ref": "RestAPI" },
        "AuthorizationType" : "AWS_IAM",
        "HttpMethod": "GET",
        "ResourceId" : { "Ref": "ProjectResource" },
        "RequestParameters": {
          "method.request.path.project-account-role": true
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false
            },
            "ResponseModels": {
              "application/json": "Empty"
            }
          }
        ],
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates" : { "application/json": "" },
              "StatusCode" : "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "ContentHandling": "CONVERT_TO_TEXT",
          "Uri": {"Fn::Join": ["", [
            "arn:aws:apigateway:",
            { "Ref": "AWS::Region" },
            ":lambda:path/2015-03-31/functions/",
            { "Fn::ImportValue": { "Fn::Join": ["-", [ {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"}, "lambda", {"Ref": "Environment"}, "LambdaProjectsArn" ]] } },
            "/invocations"
          ]]},
          "RequestTemplates": {
            "application/json": ""
          }
        }
      }
    },
    "ProjectPutValidator": {
      "Type" : "AWS::ApiGateway::RequestValidator",
      "Properties" : {
        "Name": "ProjectPutValidator",
        "RestApiId": {"Ref": "RestAPI"},
        "ValidateRequestBody": false,
        "ValidateRequestParameters": true
      }
    },
    "ProjectPut": {
      "Type" : "AWS::ApiGateway::Method",
      "Properties" : {
        "RestApiId" : { "Ref": "RestAPI" },
        "AuthorizationType" : "AWS_IAM",
        "HttpMethod": "PUT",
        "ResourceId" : { "Ref": "ProjectResource" },
        "RequestValidatorId": {"Ref": "ProjectPutValidator"},
        "RequestParameters": {
          "method.request.path.project-account-role": true
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false
            },
            "ResponseModels": {
              "application/json": "Empty"
            }
          }
        ],
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates" : { "application/json": "" },
              "StatusCode" : "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "ContentHandling": "CONVERT_TO_TEXT",
          "Uri": {"Fn::Join": ["", [
            "arn:aws:apigateway:",
            { "Ref": "AWS::Region" },
            ":lambda:path/2015-03-31/functions/",
            { "Fn::ImportValue": { "Fn::Join": ["-", [ {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"}, "lambda", {"Ref": "Environment"}, "LambdaProjectsArn" ]] } },
            "/invocations"
          ]]},
          "RequestTemplates": {
            "application/json": ""
          }
        }
      }
    },
    "APIUser": {
      "Type": "AWS::IAM::User"
    },
    "APIUserCredentials": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "UserName": {"Ref": "APIUser"}
      }
    },
    "MainGet": {
      "Type" : "AWS::ApiGateway::Method",
      "Properties" : {
        "RestApiId" : { "Ref": "RestAPI" },
        "AuthorizationType" : "AWS_IAM",
        "HttpMethod": "GET",
        "ResourceId" : { "Fn::GetAtt": ["RestAPI", "RootResourceId"] },
        "RequestParameters": {
          "method.request.querystring.error": false
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false,
              "method.response.header.content-length": false,
              "method.response.header.date": false,
              "method.response.header.etag": false,
              "method.response.header.x-powered-by": false
            },
            "ResponseModels": {
              "application/json": {"Ref": "EnvironmentModel"}
            }
          },
          {"StatusCode": "400"},
          {"StatusCode": "401"},
          {"StatusCode": "403"},
          {"StatusCode": "404"},
          {"StatusCode": "500"}
        ],
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode" : "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.content-length": "integration.response.body.headers.content-length",
                "method.response.header.date": "integration.response.body.headers.date",
                "method.response.header.etag": "integration.response.body.headers.etag",
                "method.response.header.x-powered-by": "integration.response.body.headers.x-powered-by"
              },
              "ResponseTemplates" : {
                "application/json": {"Fn::Join": ["\n", [
                  "{",
                  "\t \"HOME\" : $input.json('$.bodyJson.HOME'),",
                  "\t \"HOSTNAME\" : $input.json('$.bodyJson.HOSTNAME'),",
                  "\t \"MESSAGE\" : $input.json('$.bodyJson.MESSAGE')",
                  "}"
                ]]}
              }
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "ContentHandling": "CONVERT_TO_TEXT",
          "Uri": {"Fn::Join": ["", [
            "arn:aws:apigateway:",
            { "Ref": "AWS::Region" },
            ":lambda:path/2015-03-31/functions/",
            { "Fn::ImportValue": { "Fn::Join": ["-", [ {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"}, "lambda", {"Ref": "Environment"}, "LambdaVPCProxyArn" ]] } },
            "/invocations"
          ]]},
          "RequestTemplates": {
            "application/json": ""
          }
        }
      }
    },
    "EnvironmentModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": { "Ref": "RestAPI" },
        "ContentType": "application/json",
        "Description": "Schema environment variables.",
        "Name": "EnvironmentModel",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "EnvironmentModel",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "HOME": { "type": "string" },
              "HOSTNAME": { "type": "string" },
              "MESSAGE": { "type": "string" }
            }
          }
        }
      }
    },
    "StacksModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": { "Ref": "RestAPI" },
        "ContentType": "application/json",
        "Description": "Schema CloudFormation stacks",
        "Name": "StacksModel",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "StacksModel",
          "type": "object",
          "properties": {
            "Stacks": {
              "type": "array",
              "uniqueItems": true,
              "minItems": 1,
              "items": {
                "required": [
                  "StackId",
                  "StackName",
                  "Description",
                  "CreationTime",
                  "LastUpdatedTime",
                  "StackStatus",
                  "DisableRollback",
                  "RoleARN"
                ],
                "properties": {
                  "StackId": {
                    "type": "string",
                    "minLength": 1
                  },
                  "StackName": {
                    "type": "string",
                    "minLength": 1
                  },
                  "Description": {
                    "type": "string",
                    "minLength": 1
                  },
                  "Parameters": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "required": [
                        "ParameterKey",
                        "ParameterValue",
                        "ResolvedValue"
                      ],
                      "properties": {
                        "ParameterKey": {
                          "type": "string",
                          "minLength": 1
                        },
                        "ParameterValue": {
                          "type": "string",
                          "minLength": 1
                        },
                        "ResolvedValue": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "CreationTime": {
                    "type": "string",
                    "minLength": 1
                  },
                  "LastUpdatedTime": {
                    "type": "string",
                    "minLength": 1
                  },
                  "RollbackConfiguration": {
                    "type": "object",
                    "properties": {}
                  },
                  "StackStatus": {
                    "type": "string",
                    "minLength": 1
                  },
                  "DisableRollback": {
                    "type": "boolean"
                  },
                  "NotificationARNs": {
                    "type": "array",
                    "items": {
                      "properties": {}
                    }
                  },
                  "Capabilities": {
                    "type": "array",
                    "items": {
                      "properties": {}
                    }
                  },
                  "Outputs": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "required": [
                        "OutputKey",
                        "OutputValue",
                        "ExportName"
                      ],
                      "properties": {
                        "OutputKey": {
                          "type": "string",
                          "minLength": 1
                        },
                        "OutputValue": {
                          "type": "string",
                          "minLength": 1
                        },
                        "ExportName": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "RoleARN": {
                    "type": "string",
                    "minLength": 1
                  },
                  "Tags": {
                    "type": "array",
                    "items": {
                      "properties": {}
                    }
                  }
                }
              }
            },
            "ResponseMetadata": {
              "type": "object",
              "properties": {
                "RequestId": {
                  "type": "string",
                  "minLength": 1
                },
                "HTTPStatusCode": {
                  "type": "number"
                },
                "HTTPHeaders": {
                  "type": "object",
                  "properties": {
                    "x-amzn-requestid": {
                      "type": "string",
                      "minLength": 1
                    },
                    "content-type": {
                      "type": "string",
                      "minLength": 1
                    },
                    "content-length": {
                      "type": "string",
                      "minLength": 1
                    },
                    "vary": {
                      "type": "string",
                      "minLength": 1
                    },
                    "date": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "x-amzn-requestid",
                    "content-type",
                    "content-length",
                    "vary",
                    "date"
                  ]
                },
                "RetryAttempts": {
                  "type": "number"
                }
              },
              "required": [
                "RequestId",
                "HTTPStatusCode",
                "HTTPHeaders",
                "RetryAttempts"
              ]
            }
          },
          "required": [
            "Stacks",
            "ResponseMetadata"
          ]
        }
      }
    },
    "VPCProxyToELB": {
      "Properties": {
        "FromPort": "-1",
        "GroupId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "ec2",
              {"Ref": "Environment"},
              "ApplicationELBSG"
            ]]
          }
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "lambda",
              {"Ref": "Environment"},
              "LambdaVPCProxySecurityGroup"
            ]]
          }
        },
        "ToPort": "-1"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
    "VPCProxyToWeb": {
      "Properties": {
        "FromPort": "-1",
        "GroupId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "ec2",
              {"Ref": "Environment"},
              "WebSG"
            ]]
          }
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "lambda",
              {"Ref": "Environment"},
              "LambdaVPCProxySecurityGroup"
            ]]
          }
        },
        "ToPort": "-1"
      },
      "Type": "AWS::EC2::SecurityGroupIngress"
    },
  },
  "Outputs": {
    "RestApiId": {
      "Export": {
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "api",
            {"Ref": "Environment"},
            "RestApiId"
          ]]
        }
      },
      "Value": {
        "Ref": "RestAPI"
      }
    },
    "APIUserAccessKeyId": {
      "Export": {
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "api",
            {"Ref": "Environment"},
            "APIUserAccessKeyId"
          ]]
        }
      },
      "Value": {
        "Fn::If": [
          "IsProd",
          "No IAM user credentials can access prod resources",
          {"Ref": "APIUserCredentials"}
        ]
      }
    },
    "APIUserNotSoSecretAccessKey": {
      "Export": {
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "api",
            {"Ref": "Environment"},
            "APIUserNotSoSecretAccessKey"
          ]]
        }
      },
      "Value": {
        "Fn::If": [
          "IsProd",
          "No IAM user credentials can access prod resources",
          {"Fn::GetAtt": [
            "APIUserCredentials",
            "SecretAccessKey"
          ]}
        ]
      }
    }
  }
}
