{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description" : "Deploys an API (RESTful or not)",
  "Parameters": {
    "ProjectName": {
      "Description": "The name of your project.",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "microservice-project-name"
    },
    "Environment": {
      "Description": "The environment (dev, testing, prod, etc.) to deploy to.",
      "Type": "String"
    },
    "Version": {
      "Description": "The identifier/version associated with this API.",
      "Type": "String"
    }
  },
  "Resources": {
    "RestAPI": {
      "Type" : "AWS::ApiGateway::RestApi",
      "Properties" : {
        "Description" : {"Fn::Join": ["", [
          "The ",
          { "Ref": "ProjectName" },
          " REST API (Release Candidate ",
          {"Ref": "Version"},
          ")"
        ]]},
        "Name" : { "Fn::Join": ["-",  [
          { "Ref": "ProjectName" },
          "api",
          { "Ref": "Environment" }
        ]]}
      }
    },
    "ProjectsResource": {
      "Type" : "AWS::ApiGateway::Resource",
      "Properties" : {
        "ParentId" : { "Fn::GetAtt": ["RestAPI", "RootResourceId"] },
        "PathPart" : "projects",
        "RestApiId" : { "Ref": "RestAPI" }
      }
    },
    "ProjectsGet": {
      "Type" : "AWS::ApiGateway::Method",
      "Properties" : {
        "RestApiId" : { "Ref": "RestAPI" },
        "AuthorizationType" : "NONE",
        "HttpMethod": "GET",
        "ResourceId" : { "Ref": "ProjectsResource" },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": false
            },
            "ResponseModels": {
              "application/json": { "Ref": "ProjectsArrayModel"}
            }
          }
        ],
        "Integration": {
          "Type" : "AWS",
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates" : { "application/json": "" },
              "StatusCode" : "200"
            }
          ],
          "Uri": {"Fn::Join": ["", [
            "arn:aws:apigateway:",
            { "Ref": "AWS::Region" },
            ":lambda:path/2015-03-31/functions/",
            {
              "Fn::ImportValue": {
                "Fn::Join": ["-", [
                  {"Ref": "ProjectName"},
                  "lambda",
                  {"Ref": "Environment"},
                  "LambdaProjectsArn"
                ]]
              }
            },
            "/invocations"
          ]]}
        }
      }
    },
    "ProjectsArrayModel": {
      "Type" : "AWS::ApiGateway::Model",
      "Properties" : {
        "ContentType" : "application/json",
        "Description" : "An array of Project resources.",
        "Name" : "ProjectsArray",
        "RestApiId" : {"Ref": "RestAPI"},
        "Schema" : {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "PostsDataArray",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {"type": "string"},
              "name": {"type": "string"},
              "description": {"type": "string"}
            },
            "required": ["id", "name", "description"]
          }
        }
      }
    }
  },
  "Outputs": {
    "RestApiId": {
      "Export": {
        "Name": {
          "Fn::Join": ["-", [
            {"Ref": "ProjectName"},
            "api",
            {"Ref": "Environment"},
            "RestApiId"
          ]]
        }
      },
      "Value": {
        "Ref": "RestAPI"
      }
    }
  }
}
