{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Generates all database resources required for a microservice.",
  "Transform" : ["__PROJECT_NAME__LambdaMacro"],
  "Parameters": {
    "SnapshotIdentifier": {
      "Description": "The RDS Cluster Snapshot ID if you plan on restoring the DB cluster.",
      "Type": "String",
      "Default": ""
    },
    "DatabaseNamePrefix": {
      "Description": "The name of your datbase.",
      "MinLength": "1",
      "MaxLength": "20",
      "AllowedPattern": "[a-z]*",
      "ConstraintDescription": "Use all lowercase",
      "Type": "String"
    },
    "Environment": {
      "Description": "The environment to deploy the instance to.",
      "Type": "String"
    },
    "VPCPrefix": {
      "Description": "The 'export' name prefix of the cloudformation stack for the VPC used by this service.",
      "Type": "String"
    },
    "DBEngine": {
      "Description": "The database engine type (aurora-mysql is MySQL 5.7 compatible, aurora is MySQL 5.6 compatible, aurora-postgressql is Postgres compatible)",
      "Type": "String",
      "AllowedValues": ["aurora-mysql", "aurora", "aurora-postgressql"],
      "Default": "aurora-mysql"
    },
    "MasterUsername": {
      "Description": "The username of the database",
      "AllowedPattern": "^[a-z]+[\\_a-z]*[a-z]+",
      "ConstraintDescription": "Use all lowercase, optionally separated by underscores",
      "Type": "String"
    },
    "DBInstanceClass": {
      "Description": "The db instance class",
      "AllowedValues": [
        "db.t2.small",
        "db.t2.medium",
        "db.r3.large",
        "db.r3.xlarge",
        "db.r3.2xlarge",
        "db.r3.4xlarge",
        "db.r3.8xlarge",
        "db.r4.large",
        "db.r4.xlarge",
        "db.r4.2xlarge"
      ],
      "Type": "String"
    },
    "Version": {
      "Description": "The Lambda function version",
      "Type": "String"
    }
  },
  "Conditions": {
    "HasSnapshotIdentifier" : {"Fn::Not": [
      {"Fn::Equals" : [
        {"Ref" : "SnapshotIdentifier"}, ""
      ]}
    ]},
    "IsNotRestoredFromSnapshot" : {"Fn::Equals" : [
      {"Ref" : "SnapshotIdentifier"}, ""
    ]}
  },
  "Resources": {
    "RDSCluster": {
      "Type": "AWS::RDS::DBCluster",
      "DependsOn": ["RDSPasswordRetriever"],
      "DeletionPolicy": "Snapshot",
      "Properties": {
        "SnapshotIdentifier": {
          "Fn::If": [
            "HasSnapshotIdentifier",
            {"Ref": "SnapshotIdentifier"},
            {"Ref": "AWS::NoValue"}
          ]
        },
        "MasterUsername": {
          "Fn::If": [
            "IsNotRestoredFromSnapshot",
            {"Ref": "MasterUsername"},
            {"Ref": "AWS::NoValue"}
          ]
        },
        "StorageEncrypted": {
          "Fn::If": [
            "IsNotRestoredFromSnapshot",
            true,
            {"Ref": "AWS::NoValue"}
          ]
        },
        "MasterUserPassword": {
          "Fn::If": [
            "IsNotRestoredFromSnapshot",
            {"Fn::GetAtt": ["RDSPasswordRetriever", "Password"]},
            {"Ref": "AWS::NoValue"}
          ]
        },
        "Engine": {
          "Ref": "DBEngine"
        },
        "DatabaseName": {
          "Fn::Join": ["", [{
              "Ref": "DatabaseNamePrefix"
            },
            {
              "Ref": "Environment"
            },
            "DB"
          ]]
        },
        "VpcSecurityGroupIds": [{
          "Ref": "RDSDBSecurityGroup"
        }],
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "DBClusterParameterGroupName": {
          "Ref": "RDSDBClusterParameterGroup"
        },
        "AvailabilityZones": [{
          "Fn::ImportValue": {
            "Fn::Join": ["-", [{
                "Ref": "VPCPrefix"
              },
              "vpc",
              "PrivateSubnetAZ1AvailabilityZone"
            ]]
          }
        }, {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [{
                "Ref": "VPCPrefix"
              },
              "vpc",
              "PrivateSubnetAZ2AvailabilityZone"
            ]]
          }
        }]
      }
    },
    "RDSInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBSubnetGroupName": {
          "Ref": "DBSubnetGroup"
        },
        "DBParameterGroupName": {
          "Ref": "RDSDBParameterGroup"
        },
        "DBClusterIdentifier": {
          "Ref": "RDSCluster"
        },
        "Engine": {
          "Ref": "DBEngine"
        },
        "PubliclyAccessible": "false",
        "DBInstanceClass": {"Ref": "DBInstanceClass"}
      }
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Microservice DB subnet group",
        "DBSubnetGroupName": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            {"Ref": "Environment"},
            "db", "subnet", "group"
          ]]
        },
        "SubnetIds": [{
            "Fn::ImportValue": {
              "Fn::Join": ["-", [{
                  "Ref": "VPCPrefix"
                },
                "vpc",
                "PrivateSubnetAZ1"
              ]]
            }
          },
          {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [{
                  "Ref": "VPCPrefix"
                },
                "vpc",
                "PrivateSubnetAZ2"
              ]]
            }
          }
        ]
      }
    },
    "RDSDBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            {"Ref": "Environment"},
            "DB",
            "SG"
          ]]
        },
        "GroupDescription": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            {"Ref": "Environment"},
            "DB",
            "SG"
          ]]
        },
        "VpcId": {
          "Fn::ImportValue": {
            "Fn::Join": ["-", [
              { "Ref": "VPCPrefix" },
              "vpc",
              "VPC"
            ]]
          }
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["-", [
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "rds",
              {"Ref": "Environment"},
              "sg"
            ]]}
          }
        ]
      }
    },
    "RDSToRDS": {
      "DependsOn": "RDSCluster",
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "FromPort": "-1",
        "GroupId": {"Ref": "RDSDBSecurityGroup"},
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {"Ref": "RDSDBSecurityGroup"},
        "ToPort": "-1"
      }
    },
    "SolarmosaicDMSToRDSFirstSubnet": {
      "DependsOn": "RDSCluster",
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "FromPort": {
          "Fn::GetAtt": ["RDSCluster", "Endpoint.Port"]
        },
        "GroupId": {"Ref": "RDSDBSecurityGroup"},
        "IpProtocol": "tcp",
        "CidrIp": "10.0.250.0/24",
        "ToPort": {
          "Fn::GetAtt": ["RDSCluster", "Endpoint.Port"]
        }
      }
    },
    "SolarmosaicDMSToRDSSecondSubnet": {
      "DependsOn": "RDSCluster",
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "FromPort": {
          "Fn::GetAtt": ["RDSCluster", "Endpoint.Port"]
        },
        "GroupId": {"Ref": "RDSDBSecurityGroup"},
        "IpProtocol": "tcp",
        "CidrIp": "10.0.251.0/24",
        "ToPort": {
          "Fn::GetAtt": ["RDSCluster", "Endpoint.Port"]
        }
      }
    },
    "RDSDBClusterParameterGroup": {
      "Type": "AWS::RDS::DBClusterParameterGroup",
      "Properties": {
        "Description": "Aurora Cluster Parameter Group",
        "Family": "aurora-mysql5.7",
        "Parameters": {
          "time_zone": "UTC",
          "binlog_format": "ROW"
        }
      }
    },
    "RDSDBParameterGroup": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties": {
        "Description": "Aurora DB Parameter Group",
        "Family": "aurora-mysql5.7",
        "Parameters": {
          "sql_mode": "IGNORE_SPACE"
        }
      }
    },
    "LambdaPasswordGenerator": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "lambda_function.lambda_handler",
        "Role": {"PhoenixSSM": "/microservice/{ProjectName}/global/iam-role"},
        "Code": {
          "S3Bucket" : {"PhoenixSSM": "/microservice/{ProjectName}/global/lambda-bucket-name"},
          "S3Key": {
            "Fn::Join": ["/", [
              {"Ref": "Version"},
              "password_generator",
              "lambda_function.zip"
            ]]
          }
        },
        "Runtime": "python3.6",
        "Timeout": "25"
      }
    },
    "RDSPasswordGenerator": {
      "Type": "Custom::PasswordGenerator",
      "DependsOn": "LambdaPasswordGenerator",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": ["LambdaPasswordGenerator", "Arn"]
        },
        "Type": "encrypt",
        "PasswordLength": 20,
        "KMSKeyId": "alias/aws/ssm",
        "SnapshotIdentifier": {"Ref": "SnapshotIdentifier"},
        "ParameterName": {"Fn::Join": ["/", [
          "/microservice",
          {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
          {"Ref": "Environment"},
          "aurora-admin-password"
        ]]},
        "ParameterDescription": {"Fn::Join": ["", [
          "This parameter was created by stack ",
          {"Ref": "AWS::StackName"},
          " to store passwords for the ",
          {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
          {"Ref": "Environment"},
          " Aurora DB TEST"
        ]]}
      }
    },
    "RDSPasswordRetriever": {
      "Type": "Custom::PasswordRetriever",
      "DependsOn": ["LambdaPasswordGenerator", "RDSPasswordGenerator"],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": ["LambdaPasswordGenerator", "Arn"]
        },
        "Type": "decrypt",
        "PasswordLength": 20,
        "KMSKeyId": "alias/aws/ssm",
        "SnapshotIdentifier": {"Ref": "SnapshotIdentifier"},
        "ParameterName": {"Fn::Join": ["/", [
          "/microservice",
          {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
          {"Ref": "Environment"},
          "aurora-admin-password"
        ]]},
        "ParameterDescription": {"Fn::Join": ["", [
          "This parameter was created by stack ",
          {"Ref": "AWS::StackName"},
          " to store passwords for the ",
          {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
          {"Ref": "Environment"},
          " Aurora DB"
        ]]}
      }
    },
    "CodeBuildRDSMigration": {
      "Type": "AWS::CodeBuild::Project",
      "DependsOn": ["RDSCluster", "RDSPasswordRetriever"],
      "Properties": {
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "RDSDBSecurityGroup"}
          ],
          "Subnets": [
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                {"Ref": "VPCPrefix"},
                "vpc",
                "PrivateSubnetAZ1"
              ]]
            }},
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                {"Ref": "VPCPrefix"},
                "vpc",
                "PrivateSubnetAZ2"
              ]]
            }}
          ],
          "VpcId":  {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [
                {"Ref": "VPCPrefix"},
                "vpc",
                "VPC"
              ]]
            }
          }
        },
        "Artifacts": {
          "Type": "S3",
          "Location": {"PhoenixSSM": "/microservice/{ProjectName}/global/code-build-bucket-name"},
          "NamespaceType": "BUILD_ID",
          "Name": {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
          "Packaging": "NONE"
        },
        "BadgeEnabled": "true",
        "Cache": {
          "Location": {
            "Fn::Join": ["", [
              {"PhoenixSSM": "/microservice/{ProjectName}/global/code-build-bucket-name"},
              "/",
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "-cache"
            ]]
          },
          "Type": "S3"
        },
        "Description": {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name" : "AWS_ACCOUNT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "AWS::AccountId"}
            },
            {
              "Name" : "ENVIRONMENT",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "Environment"}
            },
            {
              "Name" : "PROJECT_NAME",
              "Type" : "PLAINTEXT",
              "Value" : {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"}
            },
            {
              "Name" : "LAMBDA_BUCKET_NAME",
              "Type" : "PLAINTEXT",
              "Value" : {"PhoenixSSM": "/microservice/{ProjectName}/global/lambda-bucket-name"}
            },
            {
              "Name": "RDS_MASTER_USERNAME",
              "Type" : "PLAINTEXT",
              "Value": {"Ref": "MasterUsername"}
            },
            {
              "Name": "RDS_WRITE_ENDPOINT",
              "Value": {"Fn::Join": ["", [
                "db",
                ".",
                {"Ref": "Environment"},
                ".",
                {"PhoenixSSM": "/microservice/{ProjectName}/global/domain"}
              ]]}
            },
            {
              "Name": "RDS_READ_ENDPOINT",
              "Value": {"Fn::Join": ["", [
                "read",
                ".",
                "db",
                ".",
                {"Ref": "Environment"},
                ".",
                {"PhoenixSSM": "/microservice/{ProjectName}/global/domain"}
              ]]}
            },
            {
              "Name": "RDS_ENDPOINT_PORT",
              "Value": {
                "Fn::GetAtt": ["RDSCluster", "Endpoint.Port"]
              }
            },
            {
              "Name": "RDS_PASSWORD",
              "Type": "PARAMETER_STORE",
              "Value": {"Fn::Join": ["/", [
                "/microservice",
                {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
                {"Ref": "Environment"},
                "aurora-admin-password"
              ]]}
            }
          ],
          "Image": {"PhoenixSSM": "/microservice/{ProjectName}/global/code-build-docker-image"},
          "PrivilegedMode": "true",
          "Type": "LINUX_CONTAINER"
        },
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "rds-migration",
            {"Ref": "Environment"}
          ]]
        },
        "ServiceRole": {"PhoenixSSM": "/microservice/{ProjectName}/global/iam-role"},
        "Source": {
          "BuildSpec": "Phoenix/buildspec-rds-migration.yml",
          "Type": "CODECOMMIT",
          "Location": {
            "Fn::Join": ["", [
              "https://git-codecommit.",
              {"Ref": "AWS::Region"},
              ".amazonaws.com/v1/repos/",
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"}
            ]]
          }
        },
        "TimeoutInMinutes": 60,
        "Tags": []
      }
    },
    "CodeBuildIntegrationTest": {
      "Type": "AWS::CodeBuild::Project",
      "DependsOn": ["RDSCluster", "RDSPasswordRetriever"],
      "Properties": {
        "VpcConfig": {
          "SecurityGroupIds": [
            {"Ref": "RDSDBSecurityGroup"}
          ],
          "Subnets": [
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                {"Ref": "VPCPrefix"},
                "vpc",
                "PrivateSubnetAZ1"
              ]]
            }},
            {"Fn::ImportValue": {
              "Fn::Join": ["-", [
                {"Ref": "VPCPrefix"},
                "vpc",
                "PrivateSubnetAZ2"
              ]]
            }}
          ],
          "VpcId":  {
            "Fn::ImportValue": {
              "Fn::Join": ["-", [
                {"Ref": "VPCPrefix"},
                "vpc",
                "VPC"
              ]]
            }
          }
        },
        "Artifacts": {
          "Type": "S3",
          "Location": {"PhoenixSSM": "/microservice/{ProjectName}/global/code-build-bucket-name"},
          "NamespaceType": "BUILD_ID",
          "Name": {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
          "Packaging": "NONE"
        },
        "BadgeEnabled": "true",
        "Cache": {
          "Location": {
            "Fn::Join": ["", [
              {"PhoenixSSM": "/microservice/{ProjectName}/global/code-build-bucket-name"},
              "/",
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
              "-cache"
            ]]
          },
          "Type": "S3"
        },
        "Description": {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_LARGE",
          "EnvironmentVariables": [
            {
              "Name" : "AWS_ACCOUNT_ID",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "AWS::AccountId"}
            },
            {
              "Name" : "ENVIRONMENT",
              "Type" : "PLAINTEXT",
              "Value" : {"Ref": "Environment"}
            },
            {
              "Name" : "PROJECT_NAME",
              "Type" : "PLAINTEXT",
              "Value" : {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"}
            },
            {
              "Name" : "LAMBDA_BUCKET_NAME",
              "Type" : "PLAINTEXT",
              "Value" : {"PhoenixSSM": "/microservice/{ProjectName}/global/lambda-bucket-name"}
            },
            {
              "Name": "RDS_MASTER_USERNAME",
              "Type" : "PLAINTEXT",
              "Value": {"Ref": "MasterUsername"}
            },
            {
              "Name": "RDS_WRITE_ENDPOINT",
              "Value": {"Fn::Join": ["", [
                "db",
                ".",
                {"Ref": "Environment"},
                ".",
                {"PhoenixSSM": "/microservice/{ProjectName}/global/domain"}
              ]]}
            },
            {
              "Name": "RDS_READ_ENDPOINT",
              "Value": {"Fn::Join": ["", [
                "read",
                ".",
                "db",
                ".",
                {"Ref": "Environment"},
                ".",
                {"PhoenixSSM": "/microservice/{ProjectName}/global/domain"}
              ]]}
            },
            {
              "Name": "RDS_ENDPOINT_PORT",
              "Value": {
                "Fn::GetAtt": ["RDSCluster", "Endpoint.Port"]
              }
            },
            {
              "Name": "RDS_PASSWORD",
              "Type": "PARAMETER_STORE",
              "Value": {"Fn::Join": ["/", [
                "/microservice",
                {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
                {"Ref": "Environment"},
                "aurora-admin-password"
              ]]}
            }
          ],
          "Image": {"PhoenixSSM": "/microservice/{ProjectName}/global/code-build-docker-image"},
          "PrivilegedMode": "true",
          "Type": "LINUX_CONTAINER"
        },
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "integration-test",
            {"Ref": "Environment"}
          ]]
        },
        "ServiceRole": {"PhoenixSSM": "/microservice/{ProjectName}/global/iam-role"},
        "Source": {
          "BuildSpec": "Phoenix/buildspec-integration-test.yml",
          "Type": "CODECOMMIT",
          "Location": {
            "Fn::Join": ["", [
              "https://git-codecommit.",
              {"Ref": "AWS::Region"},
              ".amazonaws.com/v1/repos/",
              {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"}
            ]]
          }
        },
        "TimeoutInMinutes": 60,
        "Tags": []
      }
    },
    "DnsRecordSetGroup": {
      "Properties": {
        "HostedZoneId": {"PhoenixSSM": "/microservice/{ProjectName}/global/hosted-zone-id"},
        "RecordSets": [
          {
            "ResourceRecords": [
              {
                "Fn::GetAtt": [
                  "RDSCluster", "Endpoint.Address"
                ]
              }
            ],
            "TTL": "60",
            "Name": {"Fn::Join": ["", [
              "db",
              ".",
              {"Ref": "Environment"},
              ".",
              {"PhoenixSSM": "/microservice/{ProjectName}/global/domain"}
            ]]},
            "Type": "CNAME"
          },
          {
            "ResourceRecords": [
              {
                "Fn::GetAtt": [
                  "RDSCluster", "ReadEndpoint.Address"
                ]
              }
            ],
            "TTL": "60",
            "Name": {"Fn::Join": ["", [
              "read",
              ".",
              "db",
              ".",
              {"Ref": "Environment"},
              ".",
              {"PhoenixSSM": "/microservice/{ProjectName}/global/domain"}
            ]]},
            "Type": "CNAME"
          }
        ]
      },
      "Type": "AWS::Route53::RecordSetGroup"
    }
  },
  "Outputs": {
    "MasterUsername": {
      "Export": {
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "database",
            {"Ref": "Environment"},
            "MasterUsername"
          ]]
        }
      },
      "Value": {
        "Ref": "MasterUsername"
      }
    },
    "DatabasePasswordParameterStoreKey": {
      "Export": {
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "database",
            {"Ref": "Environment"},
            "DatabasePasswordParameterStoreKey"
          ]]
        }
      },
      "Value": {"Fn::Join": ["/", [
        "/microservice",
        {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
        {"Ref": "Environment"},
        "aurora-admin-password"
      ]]}
    },
    "EndpointPort": {
      "Export": {
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "database",
            {"Ref": "Environment"},
            "EndpointPort"
          ]]
        }
      },
      "Value": {
        "Fn::GetAtt": ["RDSCluster", "Endpoint.Port"]
      }
    },
    "Endpoint": {
      "Export": {
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "database",
            {"Ref": "Environment"},
            "Endpoint"
          ]]
        }
      },
      "Value": {"Fn::Join": ["", [
        "db",
        ".",
        {"Ref": "Environment"},
        ".",
        {"PhoenixSSM": "/microservice/{ProjectName}/global/domain"}
      ]]}
    },
    "ReadEndpoint": {
      "Export": {
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "database",
            {"Ref": "Environment"},
            "ReadEndpoint"
          ]]
        }
      },
      "Value": {"Fn::Join": ["", [
        "read",
        ".",
        "db",
        ".",
        {"Ref": "Environment"},
        ".",
        {"PhoenixSSM": "/microservice/{ProjectName}/global/domain"}
      ]]}
    },
    "RDSDBSecurityGroup": {
      "Export": {
        "Name": {
          "Fn::Join": ["-", [
            {"PhoenixSSM": "/microservice/{ProjectName}/global/project-name"},
            "database",
            {"Ref": "Environment"},
            "RDSDBSecurityGroup"
          ]]
        }
      },
      "Value": {
        "Ref": "RDSDBSecurityGroup"
      }
    }
  }
}
