version: 0.2

env:
  parameter-store:
    PROJECT_NAME: microservice-project-name

phases:
  install:
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay&
      - timeout 15s sh -c "until docker info; do echo .; sleep 1; done"
      - pip install requests
  pre_build:
    commands:
      - # We set AWS_ACCOUNT_ID as an enviornment variable in the CloudFormation template which creates this CodeBuild job.
      - # We assume that the region that the CodeBuild nodes are running (AWS_DEFAULT_REGION) is the same as all other stack resource.
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
  build:
    commands:
      - echo Build started on `date`
      - echo Destroying $PROJECT_NAME microservice
      - # Delete API Gateway deployments first
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-api-deployment-prod
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-api-deployment-testing
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-api-deployment-prod
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-api-deployment-testing
      - # Delete API Gateways
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-api-prod
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-api-testing
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-api-prod
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-api-testing
      - # Delete Lambda
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-lambda-prod
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-lambda-testing
      - # Delete ECS
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-ecs-prod
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-ecs-testing
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-ecs-prod
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-ecs-testing
      - # Delete Database
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-database-prod
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-database-testing
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-database-prod
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-database-testing
      - # Delete Microservice
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-microservice
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-microservice
      - # Delete SSM Params
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-ssm-microservice-params
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-ssm-microservice-params
      - # Delete Microservice cleanup
      - aws cloudformation delete-stack --stack-name $PROJECT_NAME-microservice-cleanup
  post_build:
    commands:
      - echo Build completed on `date`
