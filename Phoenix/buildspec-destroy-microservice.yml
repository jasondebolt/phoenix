version: 0.2

phases:
  install:
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay&
      - timeout 15s sh -c "until docker info; do echo .; sleep 1; done"
      - pip install requests
  pre_build:
    commands:
      - # We set AWS_ACCOUNT_ID as an enviornment variable in the CloudFormation template which creates this CodeBuild job.
      - # We assume that the region that the CodeBuild nodes are running (AWS_DEFAULT_REGION) is the same as all other stack resource.
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
  build:
    commands:
      - echo Build started on `date`
      - echo Destroying $PROJECT_NAME microservice
      - # Delete API Gateway deployments first
      - listOfEnvironments='testing e2e prod func rc rcf'
      - |-
        # Delete API Gateway
        python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-api-deployment-prod
        for environmentName in $listOfEnvironments
        do
          python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-api-deployment-$environmentName
        done
        for environmentName in $listOfEnvironments
        do
          aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-api-deployment-$environmentName
        done

        # Delete API Gateway API Deployment
        python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-api-prod
        for environmentName in $listOfEnvironments
        do
          python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-api-$environmentName
        done
        for environmentName in $listOfEnvironments
        do
          aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-api-$environmentName
        done

        # Delete Cognito Internals
        python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-cognito-internals-prod
        for environmentName in $listOfEnvironments
        do
          python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-cognito-internals-$environmentName
        done
        for environmentName in $listOfEnvironments
        do
          aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-cognito-internals-$environmentName
        done

        # Delete ECS
        python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-ecs-prod
        for environmentName in $listOfEnvironments
        do
          python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-ecs-$environmentName
        done
        for environmentName in $listOfEnvironments
        do
          aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-ecs-$environmentName
        done

        # Delete ECS Main Task
        python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-ecs-main-prod
        for environmentName in $listOfEnvironments
        do
          python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-ecs-main-$environmentName
        done
        for environmentName in $listOfEnvironments
        do
          aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-ecs-main-$environmentName
        done

        # Delete EC2
        python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-ec2-prod
        for environmentName in $listOfEnvironments
        do
          python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-ec2-$environmentName
        done
        for environmentName in $listOfEnvironments
        do
          aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-ec2-$environmentName
        done

        # Delete Cognito
        python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-cognito-prod
        for environmentName in $listOfEnvironments
        do
          python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-cognito-$environmentName
        done
        for environmentName in $listOfEnvironments
        do
          aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-cognito-$environmentName
        done

        # Delete Lambda
        python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-lambda-prod
        for environmentName in $listOfEnvironments
        do
          python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-lambda-$environmentName
        done
        for environmentName in $listOfEnvironments
        do
          aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-lambda-$environmentName
        done

        #### # Delete Database
        #### python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-database-prod
        #### for environmentName in $listOfEnvironments
        #### do
        ####   python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-database-$environmentName
        #### done
        #### for environmentName in $listOfEnvironments
        #### do
        ####   aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-database-$environmentName
        #### done

        #### # Delete API Gateway Custom Domain
        #### python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-api-custom-domain-prod
        #### for environmentName in $listOfEnvironments
        #### do
        ####   python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-api-custom-domain-$environmentName
        #### done
        #### for environmentName in $listOfEnvironments
        #### do
        ####   aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-api-custom-domain-$environmentName
        #### done
      # Empty Microservice buckets
      - aws s3 rm s3://$ORGANIZATION_NAME-$PROJECT_NAME-code-pipeline --recursive || true
      - aws s3 rm s3://$ORGANIZATION_NAME-$PROJECT_NAME-code-build --recursive || true
      - aws s3 rm s3://$ORGANIZATION_NAME-$PROJECT_NAME-lambda --recursive || true
      - aws s3 rm s3://$ORGANIZATION_NAME-$PROJECT_NAME-microservice --recursive || true
      - aws s3 rm s3://$ORGANIZATION_NAME-$PROJECT_NAME-load-balancer-logs --recursive || true
      - # Empty V0 API Documentation buckets
      - aws s3 rm s3://v0-testing.docs.$DOMAIN --recursive || true
      - aws s3 rm s3://v0-e2e.docs.$DOMAIN --recursive || true
      - aws s3 rm s3://v0.docs.$DOMAIN --recursive || true # Prod
      - aws s3 rm s3://v0-func.docs.$DOMAIN --recursive || true
      - aws s3 rm s3://v0-rc.docs.$DOMAIN --recursive || true
      - aws s3 rm s3://v0-rcf.docs.$DOMAIN --recursive || true
      - # # Delete V0 API Documentation CloudFront distro, S3 bucket, WAF, etc.
      - # python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-api-documentation-v0-prod
      - # python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-api-documentation-v0-testing
      - # python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-api-documentation-v0-e2e
      - # python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-api-documentation-v0-prod
      - # python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-api-documentation-v0-func
      - # python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-api-documentation-v0-rc
      - # python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-api-documentation-v0-rcf
      - # # Delete the Project ECR repositories.
      - aws ecr delete-repository --repository-name $PROJECT_NAME-main --force
      - # Delete Microservice
      - python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-pipeline
      - python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-pipeline
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-pipeline
      - # Delete global SSM Params
      - python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py disable-termination-protection $PROJECT_NAME-ssm-globals-macro
      - python $CODEBUILD_SRC_DIR/Phoenix/cfn_stacks.py delete-if-exists $PROJECT_NAME-ssm-globals-macro
      - aws cloudformation wait stack-delete-complete --stack-name $PROJECT_NAME-ssm-globals-macro
      - # Delete all environment specific SSM Params
      - $CODEBUILD_SRC_DIR/Phoenix/deploy-ssm-environments.sh delete
  post_build:
    commands:
      - echo Build completed on `date`
