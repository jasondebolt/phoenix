version: 0.2

env:
  parameter-store:
    PROJECT_NAME: /microservice/phoenix/project-name
    DOMAIN: /microservice/phoenix/domain
    LAMBDA_BUCKET_NAME: /microservice/phoenix/lambda-bucket-name
    GITLAB_LINT_ACCESS_TOKEN: gitlab-codebuild-lint-access-token
    GITLAB_URL: /microservice/phoenix/gitlab-url

phases:
  install:
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay&
      - timeout 15s sh -c "until docker info; do echo .; sleep 1; done"
      - pip install requests
      - PROJECT_ENVIRONMENT=$PROJECT_NAME-api-$ENVIRONMENT
  pre_build:
    commands:
      - # We set AWS_ACCOUNT_ID as an enviornment variable in the CloudFormation template which creates this CodeBuild job.
      - # We assume that the region that the CodeBuild nodes are running (AWS_DEFAULT_REGION) is the same as all other stack resource.
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$PROJECT_NAME
      - VERSION_ID=v_$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=$VERSION_ID
      - REST_API_ID=$(aws apigateway get-rest-apis | jq '.items[] | select(.name == "'$PROJECT_ENVIRONMENT'")' | jq '.id' --raw-output)
      - echo Publishing V0 API documentation for API $REST_API_ID
      - STAGE_V0='v0'
      - aws apigateway get-export --parameters extensions='integrations' --rest-api-id $REST_API_ID --stage-name $STAGE_V0 --export-type swagger $CODEBUILD_SRC_DIR/swagger_integrations.json
      - spectacle $CODEBUILD_SRC_DIR/swagger_integrations.json --target-dir $CODEBUILD_SRC_DIR/swagger_out
      - S3_BUCKET=$STAGE_V0-$ENVIRONMENT.docs.$DOMAIN
      - echo S3 bucket is $S3_BUCKET
      - aws s3 cp $CODEBUILD_SRC_DIR/swagger_out/. s3://$S3_BUCKET/ --recursive
      - CLOUDFRONT_DISTRIBUTION_ID=$(aws cloudfront list-distributions | jq '.DistributionList.Items[] | select(.Aliases.Items[0] == "'$S3_BUCKET'")' | jq '.Id' --raw-output)
      - # Invalidate the cloudfront cache so our static content is updated.
      - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID
  build:
    commands:
      - echo Build started on `date`
      - echo generating API Documentation
      #- sbt scalastyle
  post_build:
    commands:
      - echo Build completed on `date`
