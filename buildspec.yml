version: 0.2

phases:
  install:
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay&
      #- timeout -t 15 sh -c "until docker info; do echo .; sleep 1; done"
      - timeout 15s sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - PROJECT_NAME=`jq '.Parameters.ProjectName' template-microservice-params.json`
      - AWS_ACCOUNT_ID=`jq '.Parameters.AWSAccountId' template-microservice-params.json`
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$PROJECT_NAME
      - IMAGE_TAG=v_$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo replacing build number in the task definition param files.
      - sed "s/IMAGE_TAG/$IMAGE_TAG/g" template-ecs-params-staging.json > staging_params.json
      - sed "s/IMAGE_TAG/$IMAGE_TAG/g" template-ecs-params-perf.json > performance_params.json
      - sed "s/IMAGE_TAG/$IMAGE_TAG/g" template-ecs-params-prod.json > prod_params.json
      - echo Building the Docker image from the Dockerfile.
      - docker build -t $REPOSITORY_URI:latest ecs
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
artifacts:
    files:
      - template-ecs.json
      - staging_params.json
      - performance_params.json
      - prod_params.json
